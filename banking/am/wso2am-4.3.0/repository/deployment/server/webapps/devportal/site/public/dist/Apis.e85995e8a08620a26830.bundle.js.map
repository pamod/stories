{"version":3,"file":"Apis.e85995e8a08620a26830.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/DocThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Base/Errors/SubscriptionNotFound.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicsInfo.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Breadcrumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/index.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatIcon.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatInput.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatMessage.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/Loader.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatMessages.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/Header.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/SimilaritySearch.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatWindow.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/AISearchAssistant.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Apis.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/withSettingsContext.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@mui/material/Paper';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@mui/material/Icon';\n\nconst PREFIX = 'ApiBreadcrumbs';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    link: `${PREFIX}-link`,\n    linkNotActive: `${PREFIX}-linkNotActive`,\n    icon: `${PREFIX}-icon`,\n    selectedTagText: `${PREFIX}-selectedTagText`,\n    apiGroup: `${PREFIX}-apiGroup`,\n};\n\nconst StyledPaper = styled(Paper)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        padding: theme.spacing(1, 3),\n    },\n\n    [`& .${classes.link}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.linkNotActive}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n\n    [`& .${classes.icon}`]: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n\n    [`& .${classes.selectedTagText}`]: {\n        textIndent: 4,\n    },\n\n    [`& .${classes.apiGroup}`]: {\n        color: theme.palette.grey[800],\n    },\n}));\n\n/**\n * Render no api breadcrumb section.\n * @param {JSON} props properties passed down from the parent.\n * @returns {JSX} Api breadcrumb section.\n */\nexport default function ApiBreadcrumbs(props) {\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <StyledPaper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link} underline='hover'>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && (\n                    <Link color='inherit' className={classes.linkNotActive} underline='hover'>\n                        <CustomIcon width={16} height={16} icon='api' />\n                        <span className={classes.selectedTagText}>{selectedTag}</span>\n                    </Link>\n                )}\n            </Breadcrumbs>\n        </StyledPaper>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './ImageGenerator';\nimport { ApiContext } from '../../Details/ApiContext';\n\nconst PREFIX = 'DocThumbLegacy';\n\nconst classes = {\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n\n    [`& .${classes.contextBox}`]: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n\n    [`&.${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 15,\n        marginLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n/**\n *\n *\n * @class DocThumbLegacy\n * @extends {React.Component}\n */\nclass DocThumbLegacy extends React.Component {\n    /**\n     * Creates an instance of DocThumbLegacy.\n     * @param {JSON} props properties\n     * @memberof DocThumbLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        const { thumbnail, imageObj } = this.state;\n        if (thumbnail) {\n            windowURL.revokeObjectURL(imageObj);\n        }\n    }\n\n    /**\n     * @returns {JSX} doc thumbnail\n     * @memberof DocThumbLegacy\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, theme } = this.props;\n        const {\n            doc: {\n                name, sourceType, apiName, apiVersion, id, apiUUID,\n            },\n        } = this.props;\n        const detailsLink = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <Root className={classes.thumbWrapper}>\n                <Link to={detailsLink} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} alt='document' />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={detailsLink} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right' component='div'>\n                                <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Root>\n        );\n    }\n}\n\nDocThumbLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumbLegacy.contextType = ApiContext;\n\nfunction DocThumb(props) {\n    const { doc } = props;\n    const theme = useTheme();\n    return (\n        <DocThumbLegacy\n            doc={doc}\n            theme={theme}\n        />\n    );\n}\n\nexport default (DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    styled,\n    createTheme,\n    ThemeProvider,\n    StyledEngineProvider,\n    adaptV4Theme,\n} from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport Typography from '@mui/material/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@mui/material/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from 'AppData/defaultTheme';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './APICards/DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst PREFIX = 'ApiTableViewLegacy';\n\nconst classes = {\n    apiNameLink: `${PREFIX}-apiNameLink`,\n};\n\nconst StyledStyledEngineProvider = styled(StyledEngineProvider)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class ApiTableViewLegacy\n * @extends {React.Component}\n */\nclass ApiTableViewLegacy extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableViewLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    /**\n     * Component mount call back\n     * @returns {void}\n     */\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    /**\n     * Component update call back\n     * @param {JSON} prevProps properties from previous state of the component\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        const muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n\n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    },\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        },\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, { custom: cloneDeep(theme.custom) });\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createTheme(adaptV4Theme(dataTableTheme));\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableViewLegacy\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='(Business Owner)'\n                                                id='Apis.Listing.ApiTableView.business.owner.caption'\n                                            />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value\n                                        && (\n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='(Provider)'\n                                                        id='Apis.Listing.ApiTableView.provider.caption'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                    </>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page: pageInner, count: countInner } = this;\n                if (pageInner * numberOfRows > countInner) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.view.columns',\n                        defaultMessage: 'View Columns',\n                    }),\n                },\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (_data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return (\n                            <tr key={rowIndex}>\n                                <td>\n                                    <ApiThumb\n                                        api={artifact}\n                                        customHeight={theme.custom.thumbnail.height}\n                                        customWidth={theme.custom.thumbnail.width}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <StyledStyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.getMuiTheme()}>\n                    <MUIDataTable title='' data={data} columns={columns} options={options} />\n                </ThemeProvider>\n            </StyledStyledEngineProvider>\n        );\n    }\n}\n\nApiTableViewLegacy.contextType = ApiContext;\n\nfunction ApiTableView(props) {\n    const {\n        query, selectedTag, gridView, intl, setTenantDomain,\n    } = props;\n    const theme = useTheme();\n    return (\n        <ApiTableViewLegacy\n            query={query}\n            selectedTag={selectedTag}\n            gridView={gridView}\n            intl={intl}\n            setTenantDomain={setTenantDomain}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl(ApiTableView));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PREFIX = 'APICategoryThumb';\n\nconst classes = {\n    textWrapper: `${PREFIX}-textWrapper`,\n    listItemText: `${PREFIX}-listItemText`,\n};\n\nconst StyledLink = styled(Link)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.listItemText}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n/**\n * Get APICategoryThumb\n * @param {JSON} props properties\n * @returns {JSX} category link\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    let categoryDesc = category.description;\n    if (categoryDesc.length > 50) {\n        categoryDesc = categoryDesc.substring(0, 50) + '...';\n    }\n    return (\n        <StyledLink to={categoryLink} className={classes.textWrapper}>\n            <Tooltip placement='right' title={category.description.length <= 50 ? '' : category.description}>\n                <ListItem button alignItems='flex-start'>\n                    <ListItemIcon className='category-listing-icon'>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={category.name}\n                        secondary={categoryDesc}\n                        classes={{\n                            primary: classNames(classes.listItemText, 'category-listing-primary'),\n                            secondary: 'category-listing-secondary',\n                        }}\n                    />\n                </ListItem>\n            </Tooltip>\n        </StyledLink>\n    );\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    category: PropTypes.shape({}).isRequired,\n    path: PropTypes.shape({}).isRequired,\n};\n\nexport default (APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst PREFIX = 'CategoryListingCategories';\n\nconst classes = {\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    tagWiseThumbWrapper: `${PREFIX}-tagWiseThumbWrapper`,\n    filterTitle: `${PREFIX}-filterTitle`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.mainTitle}`]: {\n        paddingTop: 0,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.tagWiseThumbWrapper}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                style,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <Root className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-cat-title')}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders' className='category-listing-categories'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </Root>\n        )\n    ) : (\n        <Root className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </Root>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n    allCategories: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst PREFIX = 'ApiTagCloud';\n\nconst classes = {\n    clickablePointer: `${PREFIX}-clickablePointer`,\n    filterTitle: `${PREFIX}-filterTitle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.clickablePointer}`]: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {JSON} props @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remove the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter((item) => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <Root>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={(tag) => handleOnClick(tag)}\n                />\n            </Root>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Chip from '@mui/material/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport classNames from 'classnames';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst PREFIX = 'RecommendedApiThumbLegacy';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n    row: `${PREFIX}-row`,\n    thumbBy: `${PREFIX}-thumbBy`,\n    media: `${PREFIX}-media`,\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n    chipWrapper: `${PREFIX}-chipWrapper`,\n    ratingWrapper: `${PREFIX}-ratingWrapper`,\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.card}`]: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n\n    [`& .${classes.apiDetails}`]: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'inline-block',\n    },\n\n    [`& .${classes.thumbBy}`]: {\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.media}`]: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n\n    [`& .${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n    },\n\n    [`& .${classes.chipWrapper}`]: {\n        marginTop: '15px',\n    },\n\n    [`& .${classes.ratingWrapper}`]: {\n        marginTop: '20px',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumbLegacy\n * @extends {Component}\n */\nclass RecommendedApiThumbLegacy extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumbLegacy.\n     * @param {*} props\n     * @memberof RecommendedApiThumbLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumbLegacy\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumbLegacy\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumbLegacy\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumbLegacy\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name } = api;\n\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <StyledCard\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </StyledCard>\n        );\n    }\n}\nRecommendedApiThumbLegacy.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumbLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumbLegacy.contextType = ApiContext;\n\nfunction RecommendedApiThumb(props) {\n    const { api } = props;\n    const theme = useTheme();\n    return (\n        <RecommendedApiThumbLegacy\n            api={api}\n            theme={theme}\n        />\n    );\n}\n\nexport default (RecommendedApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    styled,\n    createTheme,\n    ThemeProvider,\n    StyledEngineProvider,\n    adaptV4Theme,\n} from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst PREFIX = 'RecommendationsLegacy';\n\nconst classes = {\n    rowImageOverride: `${PREFIX}-rowImageOverride`,\n    apiNameLink: `${PREFIX}-apiNameLink`,\n};\n\nconst StyledStyledEngineProvider = styled(StyledEngineProvider)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.rowImageOverride}`]: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class RecommendationsLegacy\n * @extends {React.Component}\n */\nclass RecommendationsLegacy extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof RecommendationsLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    /**\n     * @memberof RecommendationsLegacy\n    */\n    componentDidMount() {\n        this.getData();\n    }\n\n    /**\n     * @memberof RecommendationsLegacy\n     * @param {JSON} prevProps previous props\n    */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createTheme(adaptV4Theme(muiTheme));\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof RecommendationsLegacy\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                } else {\n                                    return (<span />);\n                                }\n                            } else {\n                                return (<span />);\n                            }\n                        } else {\n                            return (<span />);\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            // eslint-disable-next-line no-shadow\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <StyledStyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.getMuiTheme()}>\n                    <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n                </ThemeProvider>\n            </StyledStyledEngineProvider>\n        );\n    }\n}\n\nRecommendationsLegacy.contextType = ApiContext;\n\nfunction Recommendations(props) {\n    const {\n        query, selectedTag, gridView, intl, setTenantDomain,\n    } = props;\n    const theme = useTheme();\n    return (\n        <RecommendationsLegacy\n            query={query}\n            selectedTag={selectedTag}\n            gridView={gridView}\n            intl={intl}\n            setTenantDomain={setTenantDomain}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl(Recommendations));\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport { useTheme } from '@mui/material';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst PREFIX = 'CommonListingLegacy';\n\nconst classes = {\n    rightIcon: `${PREFIX}-rightIcon`,\n    button: `${PREFIX}-button`,\n    buttonRight: `${PREFIX}-buttonRight`,\n    ListingWrapper: `${PREFIX}-ListingWrapper`,\n    appBar: `${PREFIX}-appBar`,\n    mainIconWrapper: `${PREFIX}-mainIconWrapper`,\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    iconDefault: `${PREFIX}-iconDefault`,\n    iconSelected: `${PREFIX}-iconSelected`,\n    content: `${PREFIX}-content`,\n    contentWithTags: `${PREFIX}-contentWithTags`,\n    contentWithoutTags: `${PREFIX}-contentWithoutTags`,\n    contentWithTagsHidden: `${PREFIX}-contentWithTagsHidden`,\n    LeftMenu: `${PREFIX}-LeftMenu`,\n    LeftMenuForSlider: `${PREFIX}-LeftMenuForSlider`,\n    sliderButton: `${PREFIX}-sliderButton`,\n    rotatedText: `${PREFIX}-rotatedText`,\n    recommendationsBar: `${PREFIX}-recommendationsBar`,\n    apiListingWrapper: `${PREFIX}-apiListingWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.rightIcon}`]: {\n        marginLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.button}`]: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n\n    [`& .${classes.buttonRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n\n    [`& .${classes.ListingWrapper}`]: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n\n    [`& .${classes.appBar}`]: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.mainIconWrapper}`]: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n        display: 'flex',\n        marginLeft: -40,\n    },\n\n    [`& .${classes.iconDefault}`]: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n\n    [`& .${classes.iconSelected}`]: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n\n    [`& .${classes.content}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n\n    [`& .${classes.contentWithTags}`]: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n\n    [`& .${classes.contentWithoutTags}`]: {\n        marginLeft: -4,\n    },\n\n    [`& .${classes.contentWithTagsHidden}`]: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n\n    [`& .${classes.LeftMenu}`]: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n\n    [`& .${classes.LeftMenuForSlider}`]: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n\n    [`& .${classes.sliderButton}`]: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.rotatedText}`]: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.recommendationsBar}`]: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`&.${classes.apiListingWrapper}`]: {\n        width: '100%',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CommonListingLegacy\n * @extends {Component}\n */\nclass CommonListingLegacy extends React.Component {\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListingLegacy\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n        promisedCategories\n            .then((response) => {\n                this.setState({ allCategories: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListingLegacy\n     */\n     setListType = (value) => {\n         localStorage.setItem('portal.listType', value);\n         this.setState({ listType: value });\n     };\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListingLegacy\n     */\n    render() {\n        const {\n            theme,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled,\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) !== -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <Root className={classNames(classes.apiListingWrapper, 'api-listing-wrapper')}>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classNames(classes.LeftMenu, 'api-listing-left-menu')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classNames(classes.LeftMenuForSlider, 'api-listing-left-menu-hidden')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div\n                            className={classNames(classes.rotatedText, 'api-listing-title-section-hidden')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <FormattedMessage\n                                defaultMessage='Tags / API Categories'\n                                id='Apis.Listing.Listing.ApiTagCloud.title'\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                        'content-section',\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classNames(classes.mainIconWrapper, 'main-icon-wrapper')}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (\n                            <div className={classes.buttonRight} id='listGridWrapper'>\n                                <IconButton\n                                    aria-label='Change to list view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('list')}\n                                    disabled={listType === 'list'}\n                                    size='large'\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'list' },\n                                            { [classes.iconDefault]: listType === 'grid' },\n                                        )}\n                                    >\n                                        list\n                                    </Icon>\n                                </IconButton>\n                                <IconButton\n                                    aria-label='Change to grid view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('grid')}\n                                    disabled={listType === 'grid'}\n                                    size='large'\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'grid' },\n                                            { [classes.iconDefault]: listType === 'list' },\n                                        )}\n                                    >\n                                        grid_on\n                                    </Icon>\n                                </IconButton>\n                            </div>\n                        )}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user\n                        && (\n                            <div>\n                                {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                                <div className={classes.listContentWrapper}>\n                                    {listType === 'grid' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                    {listType === 'list' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </Root>\n        );\n    }\n}\nCommonListingLegacy.contextType = Settings;\n\nCommonListingLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListingLegacy.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nfunction CommonListing(props) {\n    const theme = useTheme();\n    return (\n        <CommonListingLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default (CommonListing);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@mui/material/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Image404 from './Custom404Image';\n\nconst SubscriptionNotFound = (props) => {\n    return (\n        <Container maxWidth='md'>\n            <Box padding={4}>\n                <Paper elevation={0}>\n                    <Box padding={4}>\n                        <Grid container alignItems='center' justifyContent='center' style={{ height: '100%' }}>\n                            <Grid item xs={12} md={6}>\n                                <Typography variant='h5' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.SubscriptionNotFound.default_title'\n                                        defaultMessage='Solace Info Page is not displayed without subscriptions to the API.\n                                        Please Subscribed to the API'\n                                    />\n                                </Typography>\n                                <Typography variant='subtitle1' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.ResourceNotfound.default_body'\n                                        defaultMessage='The page you are looking for is not available'\n                                    />\n                                    <span style={{ color: 'green' }}>\n                                        {' '}\n                                        {props.response ? props.response.statusText : ''}\n                                        {' '}\n                                    </span>\n                                </Typography>\n                                <Box py={5}>\n                                    <Box pb={2}>\n                                        <Typography variant='subtitle1'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.more.links'\n                                                defaultMessage='You may check the links below'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Link to='/apis/' style={{ marginRight: 8 }}>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.api.list'\n                                                defaultMessage='API List'\n                                            />\n                                        </Button>\n                                    </Link>\n                                    <Link to='/applications/'>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.applications'\n                                                defaultMessage='Applications'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                {/* Image */}\n                                <Image404 style={{ fontSize: 400, fill: '#ccc' }} />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SubscriptionNotFound;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    Divider, Grid, TextField,\n    useTheme,\n} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport InputBase from '@mui/material/InputBase';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport Chip from '@mui/material/Chip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport API from 'AppData/api';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Button from '@mui/material/Button';\nimport SubscriptionNotFound from '../../../Base/Errors/SubscriptionNotFound';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\n\nfunction VerbElement(props) {\n    const {\n        verb,\n    } = props;\n    const theme = useTheme();\n    const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n\n    return (\n        <Button\n            disableFocusRipple\n            variant='outlined'\n            className={{\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            }}\n            size='small'\n        >\n            {verb.toUpperCase()}\n        </Button>\n    );\n}\n\nconst PREFIX = 'SolaceTopicsInfo';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    table: `${PREFIX}-table`,\n    centerItems: `${PREFIX}-centerItems`,\n    leftCol: `${PREFIX}-leftCol`,\n    iconAligner: `${PREFIX}-iconAligner`,\n    iconTextWrapper: `${PREFIX}-iconTextWrapper`,\n    iconEven: `${PREFIX}-iconEven`,\n    iconOdd: `${PREFIX}-iconOdd`,\n    heading: `${PREFIX}-heading`,\n    heading1: `${PREFIX}-heading1`,\n    emptyBox: `${PREFIX}-emptyBox`,\n    summaryRoot: `${PREFIX}-summaryRoot`,\n    actionPanel: `${PREFIX}-actionPanel`,\n    Paper: `${PREFIX}-Paper`,\n    Box2: `${PREFIX}-Box2`,\n    Box3: `${PREFIX}-Box3`,\n    list: `${PREFIX}-list`,\n    urlPaper: `${PREFIX}-urlPaper`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        '& option': {\n            padding: '5px 0px 5px 0px',\n        },\n        background: theme.custom.infoBar.background,\n    },\n\n    [`& .${classes.table}`]: {\n        minWidth: '100%',\n    },\n\n    [`& .${classes.centerItems}`]: {\n        margin: 'auto',\n    },\n\n    [`& .${classes.leftCol}`]: {\n        width: 200,\n    },\n\n    [`& .${classes.iconAligner}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.iconTextWrapper}`]: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n\n    [`& .${classes.iconEven}`]: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n\n    [`& .${classes.iconOdd}`]: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n\n    [`& .${classes.heading}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.heading1}`]: {\n        marginRight: 20,\n    },\n\n    [`& .${classes.emptyBox}`]: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.summaryRoot}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.actionPanel}`]: {\n        justifyContent: 'flex-start',\n    },\n\n    [`& .${classes.Paper}`]: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n\n    [`& .${classes.Box2}`]: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n\n    [`& .${classes.Box3}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.list}`]: {\n        width: '100%',\n        maxWidth: 800,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 175,\n    },\n\n    [`& .${classes.urlPaper}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n}));\n\nfunction SolaceTopicsInfo() {\n    const { apiUuid } = useParams();\n    const [application, setApplication] = useState(null);\n    const [environment, setEnvironment] = useState(null);\n    const [selectedProtocol, setSelectedProtocol] = useState(null);\n    const [envsListOfApplication, setEnvsListOfApplication] = useState(null);\n    const [selectedEndpoint, setSelectedEndpoint] = useState(null);\n    const [protocolsListOfEnvironments, setProtocolsListOfEnvironments] = useState(null);\n    const [topics, setTopics] = useState(null);\n    const [applicationList, setApplicationList] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [topicCopied, setTopicCopied] = useState(false);\n    const [apiTopics, setApiTopics] = useState(null);\n    const [apiPubTopics, setApiPubTopics] = useState(null);\n    const [apiSubTopics, setApiSubTopics] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const onTopicCopy = () => {\n        setTopicCopied(true);\n        const caller = function () {\n            setTopicCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    function setPubAndSubTopics(allTopics, allApiTopics) {\n        const apiPubTopicList = [];\n        allTopics.publishTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiPubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiPubTopics(apiPubTopicList);\n\n        const apiSubTopicList = [];\n        allTopics.subscribeTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiSubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiSubTopics(apiSubTopicList);\n    }\n\n    useEffect(() => {\n        const client = new API();\n\n        const promisedApi = client.getAllTopics(apiUuid);\n        const apiTopicList = [];\n        promisedApi\n            .then((response) => {\n                response.obj.list.map((entry) => {\n                    const parts = entry.name.split('{')[0];\n                    apiTopicList.push(parts);\n                    return null;\n                });\n                setApiTopics(apiTopicList);\n                return null;\n            });\n\n        const infoPromise = client.getSubscriptionAdditionalInfo(apiUuid);\n        infoPromise\n            .then((response) => {\n                setApplicationList(response.body.list);\n                // Get application\n                const appInner = response.body.list[0];\n                if (appInner != null) {\n                    setApplication(appInner.applicationName);\n                    if (appInner.solaceDeployedEnvironments !== null) {\n                        // Set default deployed environments of application\n                        setEnvsListOfApplication(appInner.solaceDeployedEnvironments);\n                        setEnvironment(appInner.solaceDeployedEnvironments[0]);\n                        // Set default protocols of deployed environment\n                        setProtocolsListOfEnvironments(appInner.solaceDeployedEnvironments[0].solaceURLs);\n                        setSelectedProtocol(appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol);\n                        setSelectedEndpoint(appInner.solaceDeployedEnvironments[0].solaceURLs[0].endpointURL);\n                        // Set default topics of deployed solace environment\n                        if (appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol === 'mqtt') {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax, apiTopicList);\n                        } else {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax, apiTopicList);\n                        }\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, [apiUuid]);\n\n    // Handle resource not found error\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    // Handle topic changes with protocol change\n    function setProtocolTopics(protocol, selectedEnv) {\n        if (protocol === 'mqtt') {\n            setTopics(selectedEnv.SolaceTopicsObject.mqttSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.mqttSyntax, apiTopics);\n        } else {\n            setTopics(selectedEnv.SolaceTopicsObject.defaultSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.defaultSyntax, apiTopics);\n        }\n    }\n    // Handle application selection change\n    const handleChangeApplication = (event) => {\n        setApplication(event.target.value);\n        let selectedApp;\n        applicationList.map((app) => {\n            if (app.applicationName === event.target.value) {\n                selectedApp = app;\n            }\n            return null;\n        });\n        const selectedEnv = selectedApp.solaceDeployedEnvironments[0];\n        setEnvsListOfApplication(selectedApp.solaceDeployedEnvironments);\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle environment selection change\n    const handleChangeEnvironment = (event) => {\n        setEnvironment(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === event.target.value) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        setProtocolsListOfEnvironments(selectedEnv.solaceURLs);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle protocol selection change\n    const handleChangeProtocol = (event) => {\n        setSelectedProtocol(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === environment.environmentDisplayName) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        let protocol;\n        protocolsListOfEnvironments.map((e) => {\n            if (e.protocol === event.target.value) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n\n    if (!applicationList) {\n        return <Loading />;\n    }\n\n    return (\n        <Root>\n            { !application && <SubscriptionNotFound /> }\n            { environment && topics && apiTopics && applicationList && (\n                <div className={classes.root}>\n                    <Typography id='itest-api-details-bushiness-plans-head' variant='h5'>\n                        <FormattedMessage\n                            id='solace.application.available.topics.heading'\n                            defaultMessage='Available Topics'\n                        />\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='solace.application.available.topics.subheading'\n                            defaultMessage='Topics permitted to access from solace applications'\n                        />\n                    </Typography>\n                    <Box mt={2} />\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeApplication}\n                                value={application}\n                                variant='outlined'\n                                label='Application'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Subscribed applications'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.subscribed.\n                                                    application'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {applicationList.map((e) => (\n                                    <option key={e} value={e.applicationName}>\n                                        {e.applicationName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeEnvironment}\n                                value={environment.environmentDisplayName}\n                                variant='outlined'\n                                label='Environment Name'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Deployed Environments'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        deployed.environment'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {envsListOfApplication.map((e) => (\n                                    <option key={e} value={e.environmentDisplayName}>\n                                        {e.environmentDisplayName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeProtocol}\n                                value={selectedProtocol}\n                                variant='outlined'\n                                label='Protocol'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Available Protocols'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        environment.protocol'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {protocolsListOfEnvironments.map((e) => (\n                                    <option key={e.protocol} value={e.protocol}>\n                                        {upperCaseString(e.protocol)}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Box pt={2}>\n                        <Divider />\n                    </Box>\n                    <Box pt={5} pb={5}>\n                        <Grid container>\n                            <Grid\n                                xs={12}\n                                md={7}\n                                item\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n\n                                <Box\n                                    id='gateway-envirounment'\n                                    component='form'\n                                    className={classes.Box3}\n                                >\n                                    <Box mr={3}>\n                                        <Chip\n                                            label={upperCaseString(selectedProtocol)}\n                                            color='primary'\n                                            style={{\n                                                width: '70px',\n                                            }}\n                                        />\n                                    </Box>\n                                    <InputBase\n                                        className={classes.input}\n                                        inputProps={{ 'aria-label': 'api url' }}\n                                        value={selectedEndpoint}\n                                    />\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard\n                                                        .writeText(selectedEndpoint).then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.publish'\n                                        defaultMessage='Publish Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiPubTopics && apiPubTopics.length > 0) ? apiPubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='PUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.PubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.PubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                                size='large'\n                                                                onClick={() => {\n                                                                    navigator.clipboard\n                                                                        .writeText(t).then(onTopicCopy('topicCopied'));\n                                                                }}\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.publish.empty'\n                                                        defaultMessage='No Publish Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.subscribe'\n                                        defaultMessage='Subscribe Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiSubTopics && apiSubTopics.length > 0) ? apiSubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='SUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.SubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.SubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                                size='large'\n                                                                onClick={() => {\n                                                                    navigator.clipboard\n                                                                        .writeText(t).then(onTopicCopy('topicCopied'));\n                                                                }}\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.subscribe.empty'\n                                                        defaultMessage='No Subscribe Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </Root>\n    );\n}\n\nSolaceTopicsInfo.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceTopicsInfo;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useHistory, Link } from 'react-router-dom';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Typography from '@mui/material/Typography';\nimport { Link as MUILink } from '@mui/material';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Box from '@mui/material/Box';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { useIntl } from 'react-intl';\n\nconst PREFIX = 'Breadcrumb';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n        paddingLeft: theme.spacing(3),\n        background: theme.custom.infoBar.background || '#ffffff',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background || '#ffffff'),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\n/**\n * @returns {JSX} breadcrumb\n */\nexport default function Breadcrumb(props) {\n    const { api } = useContext(ApiContext);\n    const { breadcrumbDocument } = props;\n\n    const history = useHistory();\n    const intl = useIntl();\n    const pages = [\n        {\n            route: 'overview',\n            text: intl.formatMessage({\n                defaultMessage: 'Overview',\n                id: 'Apis.Details.Breadcrumb.overview',\n            }),\n        },\n        {\n            route: 'credentials',\n            text: intl.formatMessage({\n                defaultMessage: 'Subscriptions',\n                id: 'Apis.Details.Breadcrumb.subscriptions',\n            }),\n        },\n        {\n            route: 'api-console',\n            text: intl.formatMessage({\n                defaultMessage: 'API Console',\n                id: 'Apis.Details.Breadcrumb.try.out.api-console',\n            }),\n        },\n        {\n            route: 'api-chat',\n            text: intl.formatMessage({\n                defaultMessage: 'API Chat',\n                id: 'Apis.Details.Breadcrumb.try.out.api-chat',\n            }),\n        },\n        {\n            route: 'comments',\n            text: intl.formatMessage({\n                defaultMessage: 'Comments',\n                id: 'Apis.Details.Breadcrumb.comments',\n            }),\n        },\n        {\n            route: 'documents',\n            text: intl.formatMessage({\n                defaultMessage: 'Documents',\n                id: 'Apis.Details.Breadcrumb.documents',\n            }),\n        },\n        {\n            route: 'sdk',\n            text: intl.formatMessage({\n                defaultMessage: 'SDKs',\n                id: 'Apis.Details.Breadcrumb.sdks',\n            }),\n        },\n    ];\n\n    const [selected, setSelected] = useState(pages[0]);\n\n    const detectCurrentMenu = (location = null) => {\n        let locationLocal = location;\n        if (!locationLocal) {\n            locationLocal = window.location;\n        }\n        const { pathname } = locationLocal;\n        for (let i = 0; i < pages.length; i++) {\n            const test1 = new RegExp('/' + pages[i].route + '$', 'g');\n            const test2 = new RegExp('/' + pages[i].route + '/', 'g');\n            if (pathname.match(test1) || pathname.match(test2)) {\n                setSelected(pages[i]);\n            }\n        }\n    };\n    useEffect(() => {\n        detectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        detectCurrentMenu(location);\n    });\n    useEffect(() => {\n        detectCurrentMenu();\n    }, [breadcrumbDocument]);\n    return (\n        <Root className={classes.root}>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <Typography color='textPrimary' component='h1' variant='h6'>{selected.text}</Typography>\n                <VerticalDivider height={15} />\n                <Breadcrumbs separator={<NavigateNextIcon fontSize='small' />} aria-label='breadcrumb'>\n                    <MUILink\n                        color='textPrimary'\n                        to={'/apis/' + api.id + '/overview'}\n                        component={Link}\n                        underline='hover'\n                    >\n                        {api.name}\n                    </MUILink>\n                    {(selected.route === 'api-console' || selected.route === 'api-chat') && (\n                        <Typography color='textPrimary'>Try Out</Typography>\n                    )}\n                    { (selected.route === 'documents' && document) && (\n                        <MUILink\n                            color='textPrimary'\n                            to={'/apis/' + api.id + '/documents/default'}\n                            component={Link}\n                            underline='hover'\n                        >\n                            {selected.text}\n                        </MUILink>\n                    ) }\n                    { (selected.route === 'documents' && !document) && <Typography color='textPrimary'>{selected.text}</Typography> }\n                    { (selected.route === 'documents' && document) && (\n                        <Typography color='textPrimary' data-testid='breadcrumbDocument'>{breadcrumbDocument}</Typography>\n                    )}\n                    { (selected.route !== 'documents') && <Typography color='textPrimary'>{selected.text}</Typography> }\n                </Breadcrumbs>\n            </Box>\n\n        </Root>\n    );\n}\n","import React, { useContext } from 'react';\nimport Button from '@mui/material/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                        color='grey'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                    id={'wizard-next-' + currentStep + '-btn'}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '@mui/material/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'CreateAppStep';\n\nconst classes = {\n    appCreateFormWrapper: `${PREFIX}-appCreateFormWrapper`,\n    warningIcon: `${PREFIX}-warningIcon`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.appCreateFormWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.warningIcon}`]: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKMInner;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter(\n                        (x) => x.name === 'Resident Key Manager' && x.enabled,\n                    );\n                    hasValidKMInner = responseKeyManagerListDefault.length !== 0;\n                }\n                setHasValidKM(hasValidKMInner);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warning'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                        defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                    />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <Root className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </Root>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport Box from '@mui/material/Box';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <Box component='div'>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </Box>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Settings from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'generateKeysStep';\n\nconst classes = {\n    keyConfigWrapper: `${PREFIX}-keyConfigWrapper`,\n    radioWrapper: `${PREFIX}-radioWrapper`,\n    paper: `${PREFIX}-paper`,\n    subTitle: `${PREFIX}-subTitle`,\n    tabPanel: `${PREFIX}-tabPanel`,\n    hr: `${PREFIX}-hr`,\n    muiFormGroupRoot: `${PREFIX}-muiFormGroupRoot`,\n    table: `${PREFIX}-table`,\n    leftCol: `${PREFIX}-leftCol`,\n    iconAligner: `${PREFIX}-iconAligner`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.keyConfigWrapper}`]: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.radioWrapper}`]: {\n        flexDirection: 'row',\n    },\n\n    [`& .${classes.paper}`]: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.subTitle}`]: {\n        fontWeight: 400,\n    },\n\n    [`& .${classes.tabPanel}`]: {\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n\n    [`& .${classes.hr}`]: {\n        border: 'solid 1px #efefef',\n    },\n\n    [`& .${classes.muiFormGroupRoot}`]: {\n        flexDirection: 'row',\n    },\n\n    [`& .${classes.table}`]: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        },\n    },\n\n    [`& .${classes.leftCol}`]: {\n        width: 200,\n    },\n\n    [`& .${classes.iconAligner}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                (<Root>{children}</Root>)\n            )}\n        </div>\n    );\n}\nTabPanel.defaultProps = {\n    children: <div />,\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [nextActive, setNextActive] = useState(true);\n    const [keyManager, setKeyManager] = useState(null);\n    const selectedTab = 'Resident Key Manager';\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Filtering Grant Types for Token Exchange\n                const filteredGrantTypes = selectedKeyManager.availableGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                setKeyManager({ ...selectedKeyManager, availableGrantTypes: filteredGrantTypes });\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange')),\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    return (\n        <Root>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (\n                        <>\n                            <Grid item xs={12} md={20} lg={3}>\n                                <Typography color='inherit' variant='subtitle2' component='div'>\n                                    <FormattedMessage\n                                        defaultMessage='Key Configuration'\n                                        id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                    />\n                                </Typography>\n                                <Typography color='inherit' variant='caption' component='p'>\n                                    <FormHelperText>\n                                        <FormattedMessage\n                                            defaultMessage={'These configurations are set for the purpose of the wizard.'\n                                                + 'You have more control over them when you go to the application view. '}\n                                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                        />\n                                    </FormHelperText>\n\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={12} lg={9}>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                    defaultMessage='Key Manager'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <div>{keyManager.displayName || keyManager.name}</div>\n                                                <Typography variant='caption' component='div'>{keyManager.description}</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                    defaultMessage='Environment'\n                                                />\n                                            </TableCell>\n                                            <TableCell>Sandbox</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                    defaultMessage='Token Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                    defaultMessage='Revoke Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                    defaultMessage='User Info Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                    defaultMessage='Grant Types'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                {keyManager.availableGrantTypes.map((gt) => (\n                                                    <span>\n                                                        {Settings.grantTypes[gt] || gt}\n                                                        ,\n                                                        {' '}\n                                                    </span>\n                                                ))}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </Root>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'generateAccessTokenStep';\n\nconst classes = {\n    tokenWrapper: `${PREFIX}-tokenWrapper`,\n    title: `${PREFIX}-title`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.tokenWrapper}`]: {\n        paddingLeft: theme.spacing(3),\n        width: '90%',\n    },\n\n    [`& .${classes.title}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const intl = useIntl();\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, createdSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType, createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    };\n\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <Root>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </Root>\n    );\n};\n\nexport default generateAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { useHistory } from 'react-router-dom';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'copyAccessTokenStep';\n\nconst classes = {\n    tokenWrapper: `${PREFIX}-tokenWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.tokenWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        width: '90%',\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n\n    return (\n        <Root className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </Root>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { Typography, Paper, Box } from '@mui/material';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst PREFIX = 'Wizard';\n\nconst classes = {\n    paper: `${PREFIX}-paper`,\n    titleSub: `${PREFIX}-titleSub`,\n    boxWrapper: `${PREFIX}-boxWrapper`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.paper}`]: {\n        marginLeft: theme.spacing(3),\n    },\n\n    [`& .${classes.titleSub}`]: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n\n    [`& .${classes.boxWrapper}`]: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n}));\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <Root>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={4} mx='auto' display='block' width='96%'>\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex'>\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex'>\n                                <Typography variant='h5' component='label'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </Root>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl((Wizard));\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { lazy, Suspense } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport SolaceTopicsInfo from 'AppComponents/Apis/Details/SolaceApi/SolaceTopicsInfo';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CONSTANTS from 'AppData/Constants';\nimport { useTheme } from '@mui/material';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport Breadcrumb from './Breadcrumb';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst AsyncApiConsole = lazy(() => import('./AsyncApiConsole/AsyncApiConsole'));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\nconst AsyncApiDefinition = lazy(() => import('./Definitions/AsyncApi/AsyncApiDefinitionUI'));\nconst ApiChat = lazy(() => import('./ApiChat/ApiChat' /* webpackChunkName: \"ApiChat\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const {\n        match,\n        api,\n        setbreadcrumbDocument,\n        apiChatEnabled,\n    } = props;\n    const { apiUuid } = match.params;\n    const path = '/apis/';\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === CONSTANTS.API_TYPES.GRAPHQL) {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={GraphQLConsole} />;\n    } else if (api.type === CONSTANTS.API_TYPES.WS || api.type === CONSTANTS.API_TYPES.WEBSUB\n        || api.type === CONSTANTS.API_TYPES.SSE || api.type === CONSTANTS.API_TYPES.ASYNC) {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={AsyncApiConsole} />;\n    } else {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={ApiConsole} />;\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route\n                    path='/apis/:apiUuid/documents'\n                    render={() => <Documents {...props} setbreadcrumbDocument={setbreadcrumbDocument} />}\n                />\n                <Route path='/apis/:apiUuid/definition' component={AsyncApiDefinition} />\n                <Route path='/apis/:apiUuid/solaceTopicsInfo' component={SolaceTopicsInfo} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                <Route path='/apis/:apiUuid/comments' component={Comments} />\n                <Route path='/apis/:apiUuid/credentials' component={Credentials} />\n                {tryoutRoute}\n                {apiChatEnabled && (\n                    <Route path='/apis/:apiUuid/api-chat' component={ApiChat} />\n                )}\n                <Route path='/apis/:apiUuid/sdk' component={Sdk} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\nconst PREFIX = 'index';\n\nconst classes = {\n    leftMenu: `${PREFIX}-leftMenu`,\n    leftMenuHorizontal: `${PREFIX}-leftMenuHorizontal`,\n    leftMenuVerticalLeft: `${PREFIX}-leftMenuVerticalLeft`,\n    leftMenuVerticalLeftMinView: `${PREFIX}-leftMenuVerticalLeftMinView`,\n    leftMenuVerticalRight: `${PREFIX}-leftMenuVerticalRight`,\n    leftLInkMain: `${PREFIX}-leftLInkMain`,\n    leftLInkMainText: `${PREFIX}-leftLInkMainText`,\n    detailsContent: `${PREFIX}-detailsContent`,\n    content: `${PREFIX}-content`,\n    contentExpandView: `${PREFIX}-contentExpandView`,\n    shiftLeft: `${PREFIX}-shiftLeft`,\n    contentLoader: `${PREFIX}-contentLoader`,\n    contentLoaderRightMenu: `${PREFIX}-contentLoaderRightMenu`,\n    expandIconColor: `${PREFIX}-expandIconColor`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        width: '100%',\n        [`& .${classes.leftMenu}`]: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        [`& .${classes.leftMenuHorizontal}`]: {\n            top: theme.custom.infoBar.height,\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        [`& .${classes.leftMenuVerticalLeft}`]: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('md')]: {\n                width: 50,\n            },\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalLeftMinView}`]: {\n            width: 45,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalRight}`]: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftLInkMain}`]: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        [`& .${classes.leftLInkMainText}`]: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        [`& .${classes.detailsContent}`]: {\n            display: 'flex',\n            flex: 1,\n        },\n        [`& .${classes.content}`]: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            [theme.breakpoints.down('md')]: {\n                marginLeft: shiftToLeft !== 0 && 50,\n                marginRight: shiftToRight !== 0 && 50,\n            },\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        [`& .${classes.contentExpandView}`]: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n            minHeight: 'calc(100vh - 114px)',\n        },\n        [`& .${classes.shiftLeft}`]: {\n            marginLeft: 0,\n        },\n        [`& .${classes.contentLoader}`]: {\n            paddingTop: theme.spacing(3),\n        },\n        [`& .${classes.contentLoaderRightMenu}`]: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n        [`& .${classes.expandIconColor}`]: {\n            color: '#ffffff',\n        },\n    };\n});\n\n/**\n *\n *\n * @class DetailsLegacy\n * @extends {React.Component}\n */\nclass DetailsLegacy extends React.Component {\n    /**\n     *Creates an instance of DetailsLegacy.\n     * @param {*} props\n     * @memberof DetailsLegacy\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof DetailsLegacy\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user === null) {\n                const user1 = new User();\n                this.setState({ open: user1.isSideBarOpen });\n            }\n            if (user != null) {\n                this.setState({ open: user.isSideBarOpen });\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = app.subscribeApplicationLimit || 5000;\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null, subscriptionLimit);\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((appInner) => !subscribedAppIds.includes(appInner.applicationId) && appInner.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n            breadcrumbDocument: '',\n            tryOutExpanded: true,\n            apiChatEnabled: false,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n        this.setbreadcrumbDocument = this.setbreadcrumbDocument.bind(this);\n    }\n\n    /**\n     * @memberof DetailsLegacy\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n        const api = new Api();\n        const promisedSettings = api.getSettings();\n        promisedSettings\n            .then((response) => {\n                this.setState({ apiChatEnabled: response.body.apiChatEnabled });\n            }).catch((error) => {\n                console.error(\n                    'Error while receiving settings : ',\n                    error,\n                );\n            });\n    }\n\n    /**\n     * handle component did update\n     * @param {JSON} prevProps previous props\n     */\n    componentDidUpdate(prevProps) {\n        const { match: { params: { apiUuid: prevApiUuid } } } = prevProps;\n        const { match: { params: { apiUuid: newApiUuid } } } = this.props;\n        if (prevApiUuid !== newApiUuid) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        }\n    }\n\n    /**\n     * @param {string} breadcrumbDocument\n     * @memberof DetailsLegacy\n     */\n    setbreadcrumbDocument(breadcrumbDocument) {\n        this.setState({ breadcrumbDocument });\n    }\n\n    /**\n     * @param {JSON} api api object\n     * @memberof DetailsLegacy\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     * @memberof DetailsLegacy\n     */\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if (user != null) {\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle left side drawer open\n     */\n    handleDrawerOpen() {\n        this.setState({ open: true });\n        const user = AuthManager.getUser();\n        if (user !== null) {\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle lef side drawer open\n     * @param {JSON} api api object\n     * @returns {boolean} is the api async api\n     */\n    isAsyncAPI(api) {\n        return (api\n            && (api.type === CONSTANTS.API_TYPES.WS\n                || api.type === CONSTANTS.API_TYPES.WEBSUB\n                || api.type === CONSTANTS.API_TYPES.SSE\n                || api.type === CONSTANTS.API_TYPES.ASYNC));\n    }\n\n    /**\n     * @returns {JSX} rendered outpu\n     * @memberof DetailsLegacy\n     */\n    render() {\n        const {\n            theme, intl,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            api, notFound, open, breadcrumbDocument, tryOutExpanded, apiChatEnabled,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks, showAsyncSpecification, showSolaceTopics,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n        const isAsyncApi = this.isAsyncAPI(api);\n\n        return api ? (\n            <Root>\n                <ApiContext.Provider value={this.state}>\n                    <Helmet>\n                        <title>{`${prefix} ${api.name}${sufix}`}</title>\n                    </Helmet>\n                    <style>{globalStyle}</style>\n                    {!isWidget && (\n                        <nav\n                            role='navigation'\n                            aria-label={intl.formatMessage({\n                                id: 'Apis.Details.index.secondary.navigation',\n                                defaultMessage: 'Secondary Navigation',\n                            })}\n                            className={classNames(\n                                classes.leftMenu,\n                                {\n                                    [classes.leftMenuHorizontal]: position === 'horizontal',\n                                },\n                                {\n                                    [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                                    [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                                },\n                                {\n                                    [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                                },\n                                'left-menu',\n                            )}\n                        >\n                            {rootIconVisible && (\n                                <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                                    <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                    {rootIconTextVisible && (\n                                        <Typography className={classes.leftLInkMainText}>\n                                            <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                        </Typography>\n                                    )}\n                                </Link>\n                            )}\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                                route='overview'\n                                iconText='overview'\n                                to={pathPrefix + 'overview'}\n                                open={open}\n                                id='left-menu-overview'\n                            />\n                            {user && showCredentials && (\n                                <>\n\n                                    <LeftMenuItem\n                                        text={(\n                                            <FormattedMessage\n                                                id='Apis.Details.index.subscriptions'\n                                                defaultMessage='Subscriptions'\n                                            />\n                                        )}\n                                        route='credentials'\n                                        iconText='credentials'\n                                        to={pathPrefix + 'credentials'}\n                                        open={open}\n                                        id='left-menu-credentials'\n                                    />\n\n                                </>\n                            )}\n                            {showTryout && (api.gatewayVendor === 'wso2'\n                                || (api.type === 'APIPRODUCT' && !api.gatewayVendor)) && (\n                                <>\n                                    <Accordion\n                                        id='left-menu-try-out'\n                                        expanded={tryOutExpanded}\n                                        elevation={0}\n                                        style={{ backgroundColor: 'transparent', margin: 0 }}\n                                        onChange={(_event, expanded) => this.setState({ tryOutExpanded: expanded })}\n                                    >\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon className={classes.expandIconColor} />}\n                                            style={{ padding: '0 12px 0 5px', maxHeight: 43, minHeight: 43 }}\n                                        >\n                                            <LeftMenuItem\n                                                text={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.index.try.out.'\n                                                        defaultMessage='Try Out'\n                                                    />\n                                                )}\n                                                iconText='test'\n                                                open={open}\n                                                id='left-menu-try-out'\n                                            />\n                                        </AccordionSummary>\n                                        <AccordionDetails\n                                            style={{ paddingTop: 0, paddingBottom: 0, margin: 0 }}\n                                        >\n                                            <div>\n                                                <LeftMenuItem\n                                                    text={(\n                                                        <FormattedMessage\n                                                            id='Apis.Details.index.try.out.api.console'\n                                                            defaultMessage='API Console'\n                                                        />\n                                                    )}\n                                                    route='api-console'\n                                                    iconText='api-console'\n                                                    to={pathPrefix + 'api-console'}\n                                                    open={open}\n                                                    id='left-menu-test'\n                                                />\n                                                {api.type !== CONSTANTS.API_TYPES.GRAPHQL && !isAsyncApi && apiChatEnabled && (\n                                                    <LeftMenuItem\n                                                        text={(\n                                                            <FormattedMessage\n                                                                id='Apis.Details.index.try.out.api.chat'\n                                                                defaultMessage='API Chat'\n                                                            />\n                                                        )}\n                                                        route='api-chat'\n                                                        Icon={<QuestionAnswerIcon style={{ fontSize: 'large', padding: 8 }} />}\n                                                        to={pathPrefix + 'api-chat'}\n                                                        open={open}\n                                                        id='left-menu-api-chat'\n                                                    />\n                                                )}\n                                            </div>\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </>\n                            )}\n                            {(showSolaceTopics && api.gatewayVendor === 'solace') && (\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.solaceTopicsInfo'\n                                            defaultMessage='Solace Info'\n                                        />\n                                    )}\n                                    route='solaceTopicsInfo'\n                                    iconText='test'\n                                    to={pathPrefix + 'solaceTopicsInfo'}\n                                    open={open}\n                                    id='left-menu-solace-info'\n                                />\n                            )}\n                            {isAsyncApi && showAsyncSpecification && (\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.definition'\n                                            defaultMessage='Definition'\n                                        />\n                                    )}\n                                    route='definition'\n                                    iconText='Definition'\n                                    to={pathPrefix + 'definition'}\n                                    open={open}\n                                    id='left-menu-definition'\n                                />\n                            )}\n                            {showComments && (\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.comments'\n                                            defaultMessage='Comments'\n                                        />\n                                    )}\n                                    route='comments'\n                                    iconText='comments'\n                                    to={pathPrefix + 'comments'}\n                                    open={open}\n                                    id='left-menu-comments'\n                                />\n                            )}\n                            {showDocuments && (\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.documentation'\n                                            defaultMessage='Documents'\n                                        />\n                                    )}\n                                    route='documents'\n                                    iconText='docs'\n                                    to={pathPrefix + 'documents'}\n                                    open={open}\n                                    id='left-menu-documents'\n                                />\n\n                            )}\n                            {!isAsyncApi && showSdks && (\n\n                                <LeftMenuItem\n                                    text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                    route='sdk'\n                                    iconText='sdk'\n                                    to={pathPrefix + 'sdk'}\n                                    open={open}\n                                    id='left-menu-sdk'\n                                />\n\n                            )}\n                            {open ? (\n                                <div\n                                    onClick={this.handleDrawerClose}\n                                    onKeyDown={this.handleDrawerClose}\n                                    style={{\n                                        width: 100, paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                    }}\n                                >\n                                    <ArrowBackIosIcon fontSize='medium' style={{ color: 'white' }} />\n                                </div>\n                            ) : (\n                                <div\n                                    onClick={this.handleDrawerOpen}\n                                    onKeyDown={this.handleDrawerOpen}\n                                    style={{\n                                        paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                    }}\n                                >\n                                    <ArrowForwardIosIcon fontSize='medium' style={{ color: 'white' }} />\n                                </div>\n\n                            )}\n\n                        </nav>\n                    )}\n\n                    <div\n                        className={classNames(\n                            { [classes.content]: open },\n                            { [classes.contentExpandView]: !open },\n                        )}\n                    >\n                        <Breadcrumb\n                            breadcrumbDocument={breadcrumbDocument}\n                        />\n                        <div\n                            className={classNames(\n                                { [classes.contentLoader]: position === 'horizontal' },\n                                { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                            )}\n                        >\n                            <LoadableSwitch\n                                api={api}\n                                updateSubscriptionData={this.updateSubscriptionData}\n                                setbreadcrumbDocument={this.setbreadcrumbDocument}\n                                apiChatEnabled={apiChatEnabled}\n                            />\n                        </div>\n                    </div>\n                </ApiContext.Provider>\n            </Root>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetailsLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nfunction Details(props) {\n    const theme = useTheme();\n    return (\n        <DetailsLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl((Details)));\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Fab from '@mui/material/Fab';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Tooltip from '@mui/material/Tooltip';\n\n/**\n * Renders Chat Icon view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Icon view.\n */\nfunction ChatBotIcon(props) {\n    const { toggleChatbot, handleDisableChatbot, chatbotDisabled } = props;\n    const [showCloseButton, setShowCloseButton] = useState(false);\n\n    const handleMouseEnter = () => {\n        setShowCloseButton(true);\n    };\n\n    const handleMouseLeave = () => {\n        setShowCloseButton(false);\n    };\n\n    const handleCloseIconClick = () => {\n        setShowCloseButton(false);\n        handleDisableChatbot();\n    };\n\n    return (\n        <>\n            <div\n                style={{ position: 'fixed', bottom: 20, right: 30 }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            >\n                {chatbotDisabled ? null : (\n                    <Tooltip title='Open Chat' placement='left'>\n                        <Fab color='primary' aria-label='chat' onClick={toggleChatbot} style={{ boxShadow: 'none' }}>\n                            <ChatIcon />\n                        </Fab>\n                    </Tooltip>\n                )}\n                {showCloseButton && (\n                    <Tooltip\n                        title='Disable chat'\n                        placement='left'\n                    >\n                        <Fab\n                            color='secondary'\n                            variant='round'\n                            aria-label='close'\n                            onClick={handleCloseIconClick}\n                            style={{\n                                position: 'absolute',\n                                top: -18,\n                                right: -18,\n                                width: 34,\n                                height: 16,\n                                backgroundColor: 'transparent',\n                                boxShadow: 'none',\n                            }}\n                        >\n                            <CloseIcon fontSize='medium' style={{ fill: '#000', stroke: '#000' }} />\n                        </Fab>\n                    </Tooltip>\n                )}\n            </div>\n        </>\n    );\n}\n\nChatBotIcon.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    handleDisableChatbot: PropTypes.func.isRequired,\n    chatbotDisabled: PropTypes.bool.isRequired,\n};\nexport default ChatBotIcon;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport {\n    TextField, Snackbar, Typography, Box,\n} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport SendIcon from '@mui/icons-material/Send';\nimport InputAdornment from '@mui/material/InputAdornment';\n\n/**\n * Renders Chat Input view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Input view.\n */\nfunction ChatInput(props) {\n    const { onSend, loading } = props;\n    const [content, setContent] = useState('');\n    const [notificationOpen, setNotificationOpen] = useState(false);\n    const QUERY_CHARACTER_LIMIT = 500;\n\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const handleChange = (e) => {\n        let { value } = e.target;\n        if (value.length > QUERY_CHARACTER_LIMIT) {\n            value = value.slice(0, QUERY_CHARACTER_LIMIT);\n        }\n        setContent(value);\n    };\n\n    const handleSend = () => {\n        if (content) {\n            onSend({ role: 'user', content });\n            setContent('');\n        }\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            if (!loading) {\n                handleSend();\n            }\n        }\n        if (e.keyCode === 13 && e.shiftKey) {\n            e.preventDefault();\n            setContent(`${content}\\n`);\n        }\n    };\n\n    const handleCloseNotification = () => {\n        setNotificationOpen(false);\n    };\n\n    return (\n        <div>\n            <TextField\n                placeholder='Type a message...'\n                value={content}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                fullWidth\n                multiline\n                size='small'\n                maxRows={12}\n                disabled={(marketplaceAssistantEnabled && !aiAuthTokenProvided) || !marketplaceAssistantEnabled}\n                InputProps={{\n                    style: {\n                        borderRadius: 10, padding: 18, paddingRight: 4,\n                    },\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                aria-label='marketplace-chat-message'\n                                onClick={handleSend}\n                                disabled={loading}\n                            >\n                                <SendIcon color='primary' />\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <Box display='flex' justifyContent='flex-end' mt={1} mr={1}>\n                <Typography variant='caption'>\n                    {content.length}\n                    /\n                    {QUERY_CHARACTER_LIMIT}\n                </Typography>\n            </Box>\n            <Snackbar\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                open={notificationOpen}\n                autoHideDuration={500}\n                onClose={handleCloseNotification}\n                message='Please enter a message'\n                sx={{\n                    position: 'absolute',\n                    bottom: 0,\n                    right: 0,\n                    transform: 'translate(50%, 50%)',\n                    marginBottom: '300px',\n                }}\n            />\n        </div>\n    );\n}\n\nChatInput.propTypes = {\n    onSend: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n};\nexport default ChatInput;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Utils from 'AppData/Utils';\nimport {\n    Box, Typography, Card, CardContent, useTheme,\n} from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport ChatIcon from '@mui/icons-material/Chat';\n\nconst getColorFromLetter = (letter, colorMap, offset) => {\n    let charLightColor = colorMap[letter.toLowerCase()];\n\n    if (!charLightColor) {\n        const charNumber = parseInt(letter, 10);\n        if (charNumber) {\n            charLightColor = colorMap[String.fromCharCode(111 + charNumber)];\n        } else {\n            return [null, null];\n        }\n    }\n    const { r, g, b } = Utils.hexToRGBHash(charLightColor);\n    const dark = Utils.rgbToHex(r - Math.ceil(r * offset), g - Math.ceil(offset * g),\n        b - Math.ceil(offset * b));\n    return [charLightColor, dark];\n};\n\n/**\n * Renders a single Chat Message view.\n * @param {JSON} props Parent props.\n * @returns {JSX} Renders single Chat Message view.\n */\nfunction ChatMessage(props) {\n    const { message, user } = props;\n    const outerBoxRef = useRef(null);\n    const theme = useTheme();\n    const {\n        colorMap, offset,\n    } = theme.custom.thumbnail;\n\n    const profileStyle = {\n        width: '26px',\n        height: '26px',\n        backgroundColor: message.role === 'assistant' ? '#10597f' : '#6d6d6d',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        margin: '10px 10px 10px 0px',\n        borderRadius: message.role === 'assistant' ? '50% 50% 50% 0' : '50% 50% 50% 0',\n    };\n\n    const messageStyle = {\n        textAlign: 'left',\n        justifyContent: 'flex-start',\n        background: message.role === 'assistant' ? theme.palette.grey[100] : '#fff',\n        color: 'black',\n        borderRadius: '8px',\n        overflow: 'auto',\n        overflowX: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-wrap',\n        marginLeft: '20px',\n        maxWidth: '84%',\n    };\n\n    return (\n        <Box\n            display='flex'\n            flexDirection='column'\n            alignItems='flex-start'\n        >\n            {message.role === 'assistant' && (\n                <Box display='flex-start' alignItems='center' flexDirection='column' width='90%'>\n                    <Box display='flex' alignItems='center' width='100%'>\n                        <div style={profileStyle}>\n                            <ChatIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'small' }} />\n                        </div>\n                        <Typography variant='body1' style={{ fontWeight: '500', fontSize: '12pt' }}>Assistant</Typography>\n                    </Box>\n                </Box>\n            )}\n\n            {message.role === 'user' && (\n                <Box display='flex' alignItems='center'>\n                    <div style={profileStyle}>\n                        <PersonIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'large' }} />\n                    </div>\n                    <Typography variant='body1' fontWeight='500' fontSize='12pt'>\n                        {user.charAt(0).toUpperCase() + user.slice(1)}\n                    </Typography>\n                </Box>\n            )}\n            <Box\n                style={{\n                    ...messageStyle,\n                    maxWidth: '84%',\n                }}\n                ref={outerBoxRef}\n                px={2}\n                py={message.role === 'assistant' ? 2 : 0}\n            >\n                <Typography>\n                    {message.content}\n                </Typography>\n            </Box>\n            <Box display='flex-start' alignItems='center' flexDirection='column' width='90%'>\n                {message.apis && (\n                    <Box display='flex' flexDirection='row' flexWrap='wrap' marginLeft='20px' marginRight='16px' width='100%'>\n                        {message.apis.map((api) => {\n                            const [light, dark] = getColorFromLetter(api.name.substring(0, 1), colorMap, offset);\n                            const background = light && `linear-gradient(to right, ${light}, ${dark})`;\n\n                            return (\n                                <a\n                                    key={api.id}\n                                    href={api.apiPath}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    style={{\n                                        textDecoration: 'none',\n                                        color: 'inherit',\n                                        width: '33%',\n                                    }}\n                                >\n                                    <Card style={{\n                                        margin: '10px 10px 0 0', width: '97%', height: '70px', background,\n                                    }}\n                                    >\n                                        <CardContent style={{ wordWrap: 'break-word', alignItems: 'center', cursor: 'pointer' }}>\n                                            <Typography\n                                                variant='subtitle1'\n                                                gutterBottom\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    overflow: 'hidden',\n                                                    textOverflow: 'ellipsis',\n                                                    margin: 0,\n                                                    color: '#fff',\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {api.name}\n                                            </Typography>\n                                            <Typography\n                                                variant='subtitle1'\n                                                gutterBottom\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    overflow: 'hidden',\n                                                    textOverflow: 'ellipsis',\n                                                    fontSize: '10px',\n                                                    color: '#fff',\n                                                }}\n                                            >\n                                                Version:\n                                                {api.version}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </a>\n                            );\n                        })}\n                    </Box>\n                )}\n            </Box>\n        </Box>\n    );\n}\n\nChatMessage.propTypes = {\n    message: PropTypes.shape({\n        role: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        apis: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n    user: PropTypes.string.isRequired,\n};\nexport default ChatMessage;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className='loader' />\n    );\n};\n\nexport default Loader;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Box, Typography } from '@mui/material';\nimport { FormattedMessage } from 'react-intl';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Alert from '@mui/material/Alert';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport ChatInput from './ChatInput';\nimport ChatMessage from './ChatMessage';\nimport Loader from './Loader';\n\n/**\n * Renders Chat Messages view.\n *\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Messages view.\n */\nfunction ChatMessages(props) {\n    const {\n        messages, loading, onSend, user,\n    } = props;\n\n    const { settings: { aiAuthTokenProvided } } = useSettingsContext();\n    const messagesEndRef = useRef(null);\n\n    const subjectLine = 'API Marketplace Assistant is an early feature and can make mistakes. Verify its outputs.';\n\n    const style = {\n        width: '26px',\n        height: '26px',\n        backgroundColor: '#10597f',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        margin: '10px 10px 10px 0px',\n        borderRadius: '50% 50% 50% 0',\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    const authTokenNotProvidedWarning = (\n        <FormattedMessage\n            id='Apis.Details.ApiChat.warning.authTokenMissing'\n            defaultMessage={'You must provide a token to start using the API Marketplace Assistant. To obtain one, '\n                + 'follow the steps provided under {marketplaceAssistantDocLink} '}\n            values={{\n                marketplaceAssistantDocLink: (\n                    <a\n                        id='marketplace-assistant-doc-link'\n                        href='https://apim.docs.wso2.com/en/4.3.0/consume/discover-apis/marketplace-assistant/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Search APIs with Marketplace Assistant\n                        <LaunchIcon\n                            style={{ marginLeft: '2px' }}\n                            fontSize='small'\n                        />\n                    </a>\n                ),\n            }}\n        />\n    );\n\n    return (\n        <Box\n            maxHeight='100%'\n            display='flex'\n            flexDirection='column'\n            marginLeft='5%'\n        >\n            <Box\n                display='flex'\n                justifyContent='center'\n                overflow='auto'\n            >\n                <Box\n                    maxWidth='1320px'\n                    width='100%'\n                >\n                    {aiAuthTokenProvided ? (\n                        messages && messages.map((message) => (\n                            <Box my={1}>\n                                <ChatMessage message={message} user={user} />\n                            </Box>\n                        ))\n                    ) : (\n                        <Box display='flex' justifyContent='center' alignItems='center' mr='5%' mb={1}>\n                            <Alert severity='warning'>\n                                {authTokenNotProvidedWarning}\n                            </Alert>\n                        </Box>\n                    )}\n\n                    {loading && (\n                        <Box\n                            display='flex'\n                            flexDirection='column'\n                            alignItems='flex-start'\n                        >\n                            <Box display='flex' alignItems='center'>\n                                <div style={style}>\n                                    <ChatIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'small' }} />\n                                </div>\n                                <Typography variant='body1' style={{ fontWeight: '500', fontSize: '12pt' }}>Assistant</Typography>\n                            </Box>\n                            <Box\n                                textAlign='left'\n                                bgcolor='#fff'\n                                borderRadius='10px'\n                                justifyContent='flex-start'\n                                px={3}\n                                marginLeft='12px'\n                                marginBottom='10px'\n                            >\n                                <Loader />\n                            </Box>\n                        </Box>\n                    )}\n                    <div ref={messagesEndRef} />\n                </Box>\n            </Box>\n\n            <Box\n                display='flex'\n                justifyContent='center'\n            >\n                <Box\n                    mt={1.5}\n                    mb={0.5}\n                    width='100%'\n                    maxWidth='1380px'\n                    marginRight='5%'\n                >\n                    <ChatInput onSend={onSend} loading={loading} />\n                </Box>\n\n            </Box>\n            <Box mb={1}>\n                <Typography\n                    color='grey'\n                    variant='body2'\n                    fontSize='8pt'\n                    textAlign='center'\n                    lineHeight='1.4'\n                    marginRight='5%'\n                >\n                    {subjectLine}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nChatMessages.propTypes = {\n    messages: PropTypes.instanceOf(Array).isRequired,\n    loading: PropTypes.bool.isRequired,\n    onSend: PropTypes.func.isRequired,\n    user: PropTypes.string.isRequired,\n};\nexport default ChatMessages;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, IconButton, Typography } from '@mui/material';\nimport { FormattedMessage } from 'react-intl';\nimport 'react-resizable/css/styles.css';\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\nimport FullscreenExitIcon from '@mui/icons-material/FullscreenExit';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport Tooltip from '@mui/material/Tooltip';\nimport RestartAltTwoToneIcon from '@mui/icons-material/RestartAltTwoTone';\nimport { styled, alpha } from '@mui/material/styles';\n\nconst PREFIX = 'marketplace-assistant-chatbot-header';\n\nconst classes = {\n    mainHeader: `${PREFIX}-mainHeader`,\n    chatbotNameBox: `${PREFIX}-chatbotNameBox`,\n    chatbotName: `${PREFIX}-chatbotName`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.chatbotNameBox}`]: {\n        padding: '2px 18px 1px 10px',\n        margin: '12px 0 12px auto',\n        borderBottom: '2px solid #10597f',\n        borderLeft: '2px solid #10597f',\n        borderRight: '2px solid #10597f',\n        borderRadius: '38px',\n    },\n    [`& .${classes.chatbotName}`]: {\n        marginBottom: -5,\n        fontSize: '12pt',\n        fontWeight: '500',\n        color: '#10597f',\n    },\n    [`& .${classes.mainHeader}`]: {\n        borderColor: alpha(theme.palette.common.black, 0.1),\n    },\n}));\n\n/**\n * Header of the Marketplace Assistant Chatbot\n *\n * @param {*} props properties\n * @returns {JSX} renders header view\n */\nfunction Header(props) {\n    const {\n        toggleChatbot, toggleFullScreen, isClicked, handleReset,\n    } = props;\n    return (\n        <Root>\n            <Box\n                display='flex'\n                flexDirection='row'\n                justifyContent='space-between'\n                borderBottom={1}\n                className={classes.mainHeader}\n            >\n                <Box>\n                    <IconButton\n                        onClick={toggleFullScreen}\n                        style={{\n                            alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 2px',\n                        }}\n                    >\n                        {isClicked ? (\n                            <FullscreenExitIcon fontSize='large' />\n                        ) : (\n                            <FullscreenIcon fontSize='large' />\n                        )}\n                    </IconButton>\n                    <Tooltip title='Reset Chat' placement='right'>\n                        <IconButton\n                            onClick={handleReset}\n                            style={{\n                                alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 0',\n                            }}\n                        >\n                            <RestartAltTwoToneIcon fontSize='large' />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n                <Box display='flex' flexDirection='column' className={classes.chatbotNameBox}>\n                    <Typography variant='body1' className={classes.chatbotName}>\n                        <FormattedMessage\n                            id='Apis.Chat.Header.MarketplaceAssistantBanner.title'\n                            defaultMessage='API Marketplace Assistant'\n                        />\n                    </Typography>\n                    <Typography variant='caption' sx={{ textAlign: 'right', marginRight: -1 }}>\n                        <FormattedMessage\n                            id='Apis.Chat.Header.MarketplaceAssistantBanner.experimental'\n                            defaultMessage='Experimental'\n                        />\n                    </Typography>\n                </Box>\n                <Box>\n                    <IconButton\n                        onClick={toggleChatbot}\n                        style={{\n                            alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 2px',\n                        }}\n                    >\n                        <ExpandMoreTwoToneIcon fontSize='large' />\n                    </IconButton>\n                </Box>\n            </Box>\n        </Root>\n    );\n}\nHeader.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    toggleFullScreen: PropTypes.func.isRequired,\n    isClicked: PropTypes.bool.isRequired,\n    handleReset: PropTypes.func.isRequired,\n};\nexport default Header;\n","const predefinedAnswers = {\n    hi: 'Hello there!, How can I assist you today?',\n    hiii: 'Hello there!, How can I assist you today?',\n    hello: 'Hi! How can I assist you today?',\n    hey: 'Hey! How can I help you?',\n    greetings: 'Greetings! What can I assist you with?',\n    thanks: 'You\\'re welcome!',\n    bye: 'Goodbye! Have a great day!',\n    goodbye: 'Goodbye! Have a great day!',\n    'thank you': 'You\\'re welcome!',\n    'thank you for your help': 'You\\'re welcome!',\n    'good morning': 'Good morning! How can I assist you today?',\n    'good afternoon': 'Good afternoon! What can I do for you?',\n    'good evening': 'Good evening! How can I help?',\n    'hey there': 'Hey! What can I assist you with?',\n    'hi there': 'Hello! How may I assist you?',\n    'hello there': 'Hello! How can I assist you today?',\n    'how are you': 'I\\'m doing well, thank you! How can I help you?',\n    'can you help me': 'You can ask me anything related to APIs!',\n    'what can I ask you': 'You can ask me anything related to APIs!',\n    'what can you do': 'I can help you with finding APIs and providing information related to APIs.',\n    'what do you do': 'I can help you with finding APIs and providing information related to APIs.',\n    'what do you know': 'I know a lot about APIs! What are you looking for?',\n    'what are you': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n    'who are you': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n    'what is your name': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n};\n\nconst calculateStringSimilarity = (string1, string2) => {\n    const str1 = string1.toLowerCase();\n    const str2 = string2.toLowerCase();\n\n    if (str1.length < 2 || str2.length < 2) return 0;\n\n    const subsequenceMap = new Map();\n    for (let i = 0; i < str1.length - 1; i++) {\n        const subsequence = str1.substr(i, 2);\n        subsequenceMap.set(subsequence, subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) + 1 : 1);\n    }\n\n    let matchCount = 0;\n    for (let j = 0; j < str2.length - 1; j++) {\n        const subsequence = str2.substr(j, 2);\n        const count = subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) : 0;\n        if (count > 0) {\n            subsequenceMap.set(subsequence, count - 1);\n            matchCount++;\n        }\n    }\n\n    return (matchCount * 2) / (str1.length + str2.length - 2);\n};\n\nconst findBestMatchingAnswer = (inputString) => {\n    let bestMatch = null;\n    let bestScore = -1;\n\n    const searchString = inputString.toLowerCase();\n\n    if (searchString.length < 2) return null;\n\n    for (const [key] of Object.entries(predefinedAnswers)) {\n        const comparisonString = key.toLowerCase();\n\n        const score = calculateStringSimilarity(searchString, comparisonString);\n\n        if (score > bestScore) {\n            bestScore = score;\n            bestMatch = key;\n        }\n    }\n\n    if (bestScore < 0.8) return null;\n\n    return predefinedAnswers[bestMatch];\n};\n\nexport default findBestMatchingAnswer;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport {\n    Container, Box,\n} from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport { ResizableBox } from 'react-resizable';\nimport 'react-resizable/css/styles.css';\nimport ChatMessages from './ChatMessages';\nimport Header from './Header';\nimport findBestMatchingAnswer from './SimilaritySearch';\n\n/**\n * Renders Chat Messages view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Window view.\n */\nfunction ChatWindow(props) {\n    const {\n        toggleChatbot, toggleClearChatbot, messages, setMessages, introMessage, user, loading, responseRef, apiCall,\n    } = props;\n\n    const [isClicked, setIsClicked] = useState(false);\n    const [apiLimitExceeded, setApiLimitExceeded] = useState(false);\n    const [apisCount, setApisCount] = useState(null);\n    const [limit, setLimit] = useState(null);\n\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const [, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n\n    const toggleFullScreen = (e) => {\n        e.preventDefault();\n        setIsClicked(!isClicked);\n    };\n\n    const handleClear = () => {\n        setMessages([introMessage]);\n        toggleClearChatbot();\n    };\n\n    const handleSend = async (message) => {\n        responseRef.current = [...responseRef.current, { role: 'user', content: message.content.trim() }];\n        setMessages(responseRef.current);\n\n        const query = message.content.trim().toLowerCase();\n\n        const response = findBestMatchingAnswer(query);\n        if (response) {\n            responseRef.current = [...responseRef.current, { role: 'assistant', content: response.trim() }];\n            setMessages(responseRef.current);\n        } else {\n            apiCall(message.content);\n        }\n    };\n\n    const handleReset = () => {\n        responseRef.current = [introMessage];\n        setMessages([introMessage]);\n    };\n\n    useEffect(() => {\n        responseRef.current = messages;\n\n        if (marketplaceAssistantEnabled && aiAuthTokenProvided) {\n            const restApi = new Api();\n            restApi\n                .getMarketplaceAssistantApiCount()\n                .then((data) => {\n                    const apiCount = data.body.count;\n                    const apiLimit = data.body.limit;\n                    setApisCount(apiCount);\n                    setLimit(apiLimit);\n                    if (apiCount >= apiLimit - 50) {\n                        setApiLimitExceeded(true);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n\n        <ResizableBox\n            width={isClicked ? window.innerWidth : 500}\n            height={window.innerHeight - 64}\n            minConstraints={[500, window.innerHeight]}\n            maxConstraints={[window.innerWidth, window.innerHeight - 64]}\n            resizeHandles={['w']}\n            style={{\n                position: 'fixed',\n                bottom: 1,\n                right: 0,\n                display: 'flex',\n                justifyContent: 'flex-start',\n                flexDirection: 'row-reverse',\n                zIndex: 1200,\n            }}\n            handle={(\n                <span\n                    style={{\n                        width: '4px',\n                        cursor: 'ew-resize',\n                        minWidth: '4px',\n                    }}\n                />\n            )}\n        >\n            <Container\n                maxWidth={false}\n                style={{\n                    padding: 0,\n                    backgroundColor: '#fff',\n                    border: '0px solid #808e96',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.3)',\n                    borderRadius: '4px',\n                    margin: '4px 4px 4px 0',\n                }}\n            >\n                <Box\n                    display='flex'\n                    flexDirection='column'\n                    style={{\n                        height: '100%',\n                    }}\n                >\n                    <Header\n                        toggleChatbot={toggleChatbot}\n                        toggleFullScreen={toggleFullScreen}\n                        handleClear={handleClear}\n                        handleReset={handleReset}\n                        isClicked={isClicked}\n                    />\n                    {/* Alert to show API count info */}\n                    {marketplaceAssistantEnabled && aiAuthTokenProvided && apiLimitExceeded && (\n                        (apisCount >= limit) ? (\n                            <Alert severity='error' style={{ borderRadius: '0px', zIndex: 2999, padding: '0 10px 0 10px' }}>\n                                {`You are reached your maximum limit (${limit} apis) for API usage.`}\n                            </Alert>\n                        ) : (\n                            <Alert severity='warning' style={{ borderRadius: '0px', zIndex: 2999, padding: '0 10px 0 10px' }}>\n                                {`You are approaching your maximum limit for API usage. You can utilize up to ${limit} APIs.\n                                    Currently, you have utilized ${apisCount} APIs.`}\n                            </Alert>\n                        )\n                    )}\n\n                    <Box\n                        flexGrow={1}\n                        display='flex'\n                        overflow='auto'\n                        flexDirection='column'\n                        justifyContent='flex-end'\n                    >\n                        <ChatMessages\n                            messages={messages}\n                            loading={loading}\n                            onSend={handleSend}\n                            onReset={handleReset}\n                            user={user}\n                        />\n                    </Box>\n                </Box>\n            </Container>\n        </ResizableBox>\n    );\n}\n\nChatWindow.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    toggleClearChatbot: PropTypes.func.isRequired,\n    messages: PropTypes.instanceOf(Array).isRequired,\n    setMessages: PropTypes.func.isRequired,\n    introMessage: PropTypes.shape({\n        role: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n    }).isRequired,\n    user: PropTypes.string.isRequired,\n    loading: PropTypes.bool.isRequired,\n    responseRef: PropTypes.shape({\n        current: PropTypes.arrayOf(PropTypes.shape({\n            role: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })).isRequired,\n    }).isRequired,\n    apiCall: PropTypes.func.isRequired,\n};\nexport default ChatWindow;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport ChatBotIcon from './ChatIcon';\nimport ChatWindow from './ChatWindow';\n\n/**\n * Renders AI Search Assistant view.\n *\n * @returns {JSX} renders Chat Icon view.\n */\nfunction AISearchAssistant() {\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const [showChatbot, setShowChatbot] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState(null);\n    const [chatbotDisabled, setChatbotDisabled] = useState(!marketplaceAssistantEnabled);\n    const [user, setUser] = useState('You');\n    const responseRef = useRef([]);\n\n    const introMessage = {\n        role: 'assistant',\n        content: 'Hello! I\\'m here to assist you in discovering and obtaining information about APIs.'\n        + ' How can I help you?',\n    };\n\n    const pathName = window.location.pathname;\n    const { search, origin } = window.location;\n\n    const apiCall = (query) => {\n        setLoading(true);\n\n        if (marketplaceAssistantEnabled && aiAuthTokenProvided) {\n            const restApi = new Api();\n            const messagePayload = messages.slice(-10).map(({ apis, ...message }) => {\n                if (!apis) {\n                    return message;\n                }\n                const apiList = apis.map((api) => ({ apiName: api.name, version: api.version }));\n                return { role: message.role, content: JSON.stringify({ response: message.content, apis: apiList }) };\n            });\n\n            restApi.marketplaceAssistantExecute(query, messagePayload)\n                .then((result) => {\n                    const { apis } = result.body;\n\n                    const apiPaths = apis.map((api) => {\n                        return { apiPath: `${origin}${pathName}/${api.apiId}/overview${search}`, name: api.apiName, version: api.version };\n                    });\n                    responseRef.current = [...responseRef.current, { role: 'assistant', content: result.body.response, apis: apiPaths }];\n                    setMessages(responseRef.current);\n                    return result.body;\n                }).catch((error) => {\n                    let content;\n                    try {\n                        switch (error.response.status) {\n                            case 401: // Unauthorized\n                                content = 'Apologies for the inconvenience. It appears that your token is invalid or expired. Please'\n                                + ' provide a valid token or upgrade your subscription plan.';\n                                break;\n                            case 429: // Token limit exceeded\n                                content = 'Apologies for the inconvenience. It appears that the token limit has been exceeded.';\n                                break;\n                            default:\n                                content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                                + ' Marketplace Assistant. Please try again later.';\n                                break;\n                        }\n                    } catch (err) {\n                        content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                        + ' Marketplace Assistant. Please try again later.';\n                    }\n\n                    const errorMessage = { role: 'assistant', content };\n                    responseRef.current = [...responseRef.current, errorMessage];\n                    setMessages(responseRef.current);\n\n                    throw error;\n                }).finally(() => {\n                    setLoading(false);\n                });\n        }\n    };\n\n    const toggleChatbot = () => {\n        setShowChatbot(!showChatbot);\n    };\n\n    const handleDisableChatbot = () => {\n        setChatbotDisabled(true);\n        setMessages([introMessage]);\n    };\n\n    useEffect(() => {\n        if (messages) {\n            const messagesJSON = JSON.stringify({ messages, timestamp: Date.now() });\n            localStorage.setItem('messages', messagesJSON);\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        try {\n            const loggedInUser = Utils.getUser();\n            if (loggedInUser) {\n                setUser(loggedInUser);\n            }\n            const storedData = localStorage.getItem('messages');\n            if (storedData) {\n                const { messages: storedMessages, timestamp } = JSON.parse(storedData);\n                if (Date.now() - timestamp > 60 * 60 * 1000) {\n                    setMessages([introMessage]);\n                    localStorage.setItem('messages',\n                        JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n                } else {\n                    setMessages(storedMessages);\n                }\n            } else {\n                setMessages([introMessage]);\n                localStorage.setItem('messages', JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n            }\n        } catch (error) {\n            console.error('Error loading messages from localStorage:', error);\n        }\n    }, []);\n\n    return (\n        <Box>\n            {!chatbotDisabled && (\n                showChatbot ? (\n                    <Box position='absolute' bottom={24} right={24}>\n                        <ChatBotIcon\n                            toggleChatbot={toggleChatbot}\n                            handleDisableChatbot={handleDisableChatbot}\n                            chatbotDisabled={chatbotDisabled}\n                        />\n                    </Box>\n                ) : (\n                    <ChatWindow\n                        toggleChatbot={toggleChatbot}\n                        messages={messages}\n                        setMessages={setMessages}\n                        introMessage={introMessage}\n                        user={user}\n                        loading={loading}\n                        responseRef={responseRef}\n                        apiCall={apiCall}\n                    />\n                )\n            )}\n        </Box>\n    );\n}\n\nexport default AISearchAssistant;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\nimport AISearchAssistant from './Chat/AISearchAssistant';\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <>\n                        <CommonListing {...props} />\n                        <AISearchAssistant />\n                    </>\n                )}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default Apis;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst PREFIX = 'TagCloudListing';\n\nconst classes = {\n    appBar: `${PREFIX}-appBar`,\n    mainIconWrapper: `${PREFIX}-mainIconWrapper`,\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    content: `${PREFIX}-content`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    iconDefault: `${PREFIX}-iconDefault`,\n};\n\nconst Root = styled('main')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.appBar}`]: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.mainIconWrapper}`]: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`&.${classes.content}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.iconDefault}`]: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <Root className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </Root>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\nimport { useTheme } from '@mui/material';\n\nconst PREFIX = 'ApiTagThumb';\n\nconst classes = {\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    image: `${PREFIX}-image`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n\n    [`& .${classes.contextBox}`]: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n\n    [`&.${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.image}`]: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n}));\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, style, mainPage,\n    } = props;\n    const theme = useTheme();\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <Root className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <center>\n                <div className={classNames(classes.thumbContent)}>\n                    <Link to={tagLink} className={classes.textWrapper}>\n                        <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                            {name}\n                        </Typography>\n                    </Link>\n                </div>\n            </center>\n        </Root>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default (ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst PREFIX = 'TagCloudListingTags';\n\nconst classes = {\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    linkTextWrapper: `${PREFIX}-linkTextWrapper`,\n    tagWiseThumbWrapper: `${PREFIX}-tagWiseThumbWrapper`,\n    filterTitle: `${PREFIX}-filterTitle`,\n    mainPageList: `${PREFIX}-mainPageList`,\n    mainPageAllApis: `${PREFIX}-mainPageAllApis`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.linkTextWrapper}`]: {\n        color: theme.palette.primary.main,\n    },\n\n    [`& .${classes.tagWiseThumbWrapper}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n\n    [`& .${classes.mainPageList}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${classes.mainPageAllApis}`]: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <Root>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage }, 'tag-cloud-listing-wrapper')}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </Root>\n\n    ) : (\n        <Root>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-group')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classNames(classes.mainTitle, 'apis-listing-tags-empty')}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classNames(classes.linkTextWrapper, 'apis-listing-tags-group-all-apis-link')}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </Root>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Grid from '@mui/material/Grid';\nimport ListItemText from '@mui/material/ListItemText';\nimport InputLabel from '@mui/material/InputLabel';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nconst PREFIX = 'SubscribeToApi';\n\nconst classes = {\n    titleBar: `${PREFIX}-titleBar`,\n    buttonLeft: `${PREFIX}-buttonLeft`,\n    buttonRight: `${PREFIX}-buttonRight`,\n    title: `${PREFIX}-title`,\n    buttonsWrapper: `${PREFIX}-buttonsWrapper`,\n    legend: `${PREFIX}-legend`,\n    inputText: `${PREFIX}-inputText`,\n    buttonRightLink: `${PREFIX}-buttonRightLink`,\n    FormControl: `${PREFIX}-FormControl`,\n    fullWidth: `${PREFIX}-fullWidth`,\n    FormControlOdd: `${PREFIX}-FormControlOdd`,\n    quotaHelp: `${PREFIX}-quotaHelp`,\n    subscribeRoot: `${PREFIX}-subscribeRoot`,\n    subscribeRootSmall: `${PREFIX}-subscribeRootSmall`,\n    smallDisplay: `${PREFIX}-smallDisplay`,\n    smallDisplayFix: `${PREFIX}-smallDisplayFix`,\n    selectMenuRoot: `${PREFIX}-selectMenuRoot`,\n    appDropDown: `${PREFIX}-appDropDown`\n};\n\nconst StyledGrid = styled(Grid)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.titleBar}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n\n    [`& .${classes.buttonLeft}`]: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n\n    [`& .${classes.buttonRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n\n    [`& .${classes.title}`]: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n\n    [`& .${classes.buttonsWrapper}`]: {\n        marginTop: 40,\n    },\n\n    [`& .${classes.legend}`]: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n\n    [`& .${classes.inputText}`]: {\n        marginTop: 20,\n    },\n\n    [`& .${classes.buttonRightLink}`]: {\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.FormControl}`]: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.fullWidth}`]: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n\n    [`& .${classes.FormControlOdd}`]: {\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    [`& .${classes.quotaHelp}`]: {\n        position: 'relative',\n    },\n\n    [`&.${classes.subscribeRoot}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`&.${classes.subscribeRootSmall}`]: {\n        marginLeft: theme.spacing(-4),\n    },\n\n    [`& .${classes.smallDisplay}`]: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n\n    [`& .${classes.smallDisplayFix}`]: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n\n    [`& .${classes.selectMenuRoot}`]: {\n        margin: 0,\n        padding: 0,\n    },\n\n    [`& .${classes.appDropDown}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        '&:hover': {\n            backgroundColor: 'unset',\n        },\n    }\n}));\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState({tierName:''});\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0]);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = value.tierName;\n                setPolicySelected(value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <StyledGrid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl\n                        variant=\"standard\"\n                        className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           aria-describedby='application-helper-text'\n                           options={applicationsList}\n                           disableClearable\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField variant=\"standard\" {...params} />}\n                         />\n                        <FormHelperText id='application-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        variant=\"standard\"\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.business.plan'\n                                defaultMessage='Business Plan'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                            id='application-policy'\n                            aria-describedby='policies-helper-text'\n                            options={throttlingPolicyList}\n                            disableClearable\n                            value={policySelected}\n                            getOptionLabel={(option) => option.tierName}\n                            getOptionSelected={(option, value) => option.tierName === value.tierName}\n                            onChange={(e, value) => handleChange('throttlingPolicy', e, value)}\n                            classes={{ root: classes.fullWidth }}\n                            renderInput={(params) => <TextField variant=\"standard\" {...params} />}\n                            groupBy={(option) => option.tierPlan === 'COMMERCIAL'  ? 'Commercial' : 'Free'}\n                            renderOption={(props, policy) => (\n                                <MenuItem {...props} value={policy.tierName} key={policy.tierName} className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            )}\n                        />\n                    </FormControl>\n                )}\n            </Grid>\n        </StyledGrid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default (subscribeToApi);\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n"],"names":["PREFIX","classes","root","link","linkNotActive","icon","selectedTagText","apiGroup","StyledPaper","styled","Paper","_ref","theme","padding","spacing","display","alignItems","cursor","marginRight","width","height","textIndent","color","palette","grey","ApiBreadcrumbs","props","useTheme","selectedTag","React","elevation","className","Breadcrumbs","RouterLink","to","custom","tagWise","active","style","Link","underline","Icon","FormattedMessage","defaultMessage","id","CustomIcon","thumbContent","thumbLeft","thumbRight","thumbInfo","thumbHeader","contextBox","thumbWrapper","deleteIcon","textWrapper","imageWrapper","imageOverlap","Root","thumbnail","backgroundColor","background","paper","minHeight","alignSelf","flex","flexDirection","whiteSpace","overflow","textOverflow","margin","parseInt","lineHeight","position","paddingTop","marginLeft","fill","text","secondary","textDecoration","justifyContent","bottom","contentBackgroundColor","windowURL","window","URL","webkitURL","DocThumbLegacy","constructor","super","this","state","category","MaterialIcons","name","selectedIcon","backgroundIndex","imageObj","componentWillUnmount","revokeObjectURL","render","doc","sourceType","apiName","apiVersion","apiUUID","detailsLink","imageWidth","defaultImage","defaultApiImage","ImageView","ImageGenerator","api","fixedIcon","key","src","alt","classNames","contentPictureOverlap","Typography","variant","gutterBottom","onClick","handleRedirectToAPIOverview","title","align","component","propTypes","PropTypes","isRequired","contextType","ApiContext","StyledStyledEngineProvider","StyledEngineProvider","getContrastText","listView","tableBodyEvenBackgrund","marginTop","iconColor","fontSize","listViewIconSize","ApiTableViewLegacy","_defineProperty","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","marginBottom","boxShadow","tableRoot","border","paddingRight","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","flexWrap","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createTheme","adaptV4Theme","intl","setState","loading","xhrRequest","then","data","body","list","pagination","total","count","catch","error","response","setTenantDomain","code","Alert","formatMessage","finally","query","page","rowsPerPage","API","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","componentDidMount","apiType","context","getData","componentDidUpdate","prevProps","_this","social","showRating","columns","options","filter","customBodyRender","value","tableMeta","updateValue","tableViewObj","arguments","length","undefined","rowData","artifact","rowIndex","sort","label","apiId","type","strokeColor","businessOwner","avgRating","StarRatingBar","apiRating","isEditable","showSummary","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","pageInner","countInner","setItem","textLabels","toolbar","downloadCsv","print","viewColumns","customRowRender","_data","dataIndex","DocThumb","ApiThumb","customHeight","customWidth","download","customToolbar","Loading","NoApi","injectFirst","ThemeProvider","getMuiTheme","withSettings","injectIntl","listItemText","StyledLink","tagCloud","leftMenu","APICategoryThumb","path","categoryLink","categoryDesc","description","substring","Tooltip","placement","ListItem","button","ListItemIcon","ListItemText","primary","mainTitle","mainTitleWrapper","listContentWrapper","tagWiseThumbWrapper","filterTitle","flexGrow","fontWeight","paddingLeft","titleBackground","infoBar","CategoryListingCategories","allCategories","List","Object","keys","map","allTags","clickablePointer","ApiTagCloud","colorOptions","history","useHistory","apisTagWithoutGroups","item","TagCloud","minSize","maxSize","tags","shuffle","tag","tagSearchURL","push","handleOnClick","card","apiDetails","suppressLinkStyles","row","thumbBy","media","chipWrapper","ratingWrapper","StyledCard","Card","unit","maxWidth","transition","disabled","objectFit","textAlign","RecommendedApiThumbLegacy","isHover","toggleMouseOver","bind","Api","getAPIThumbnail","headers","iconJson","JSON","parse","size","url","createObjectURL","getPathPrefix","event","showInfo","imageHeight","onMouseOver","onFocus","onMouseOut","onBlur","raised","CardMedia","CardContent","transportType","Chip","defaultProps","rowImageOverride","apiNameLink","RecommendationsLegacy","assign","getApiRecommendations","RecommendedApiThumb","rowsPerPageOptions","rightIcon","buttonRight","ListingWrapper","appBar","mainIconWrapper","iconDefault","iconSelected","content","contentWithTags","contentWithoutTags","contentWithTagsHidden","LeftMenu","LeftMenuForSlider","sliderButton","rotatedText","recommendationsBar","apiListingWrapper","contentAreaWidth","borderBottom","A200","listGridSelectedColor","paddingBottom","sliderWidth","fontFamily","typography","top","left","overflowY","sliderBackground","right","transform","transformOrigin","CommonListingLegacy","listType","prevState","showLeftMenu","enabled","settings","monetizationEnabled","isMonetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","getAllTags","console","log","apiCategories","location","user","AuthManager","getUser","tagCloudActive","strokeColorMain","splits","split","splitTagArray","tagPaneVisible","categoryPaneVisible","toggleLeftMenu","onKeyDown","TagCloudListingTags","IconButton","setListType","Provider","ApiTableView","Recommendations","Settings","_extends","Container","Box","Grid","container","xs","md","statusText","py","pb","Button","Image404","VerbElement","verb","resourceChipColors","toLowerCase","disableFocusRipple","borderColor","toUpperCase","table","centerItems","leftCol","iconAligner","iconTextWrapper","iconEven","iconOdd","heading","heading1","emptyBox","summaryRoot","actionPanel","Box2","Box3","urlPaper","input","avatar","iconStyle","minWidth","iconOddColor","main","borderRadius","maxHeight","SolaceTopicsInfo","apiUuid","useParams","application","setApplication","useState","environment","setEnvironment","selectedProtocol","setSelectedProtocol","envsListOfApplication","setEnvsListOfApplication","selectedEndpoint","setSelectedEndpoint","protocolsListOfEnvironments","setProtocolsListOfEnvironments","topics","setTopics","applicationList","setApplicationList","notFound","setNotFound","urlCopied","setUrlCopied","topicCopied","setTopicCopied","apiTopics","setApiTopics","apiPubTopics","setApiPubTopics","apiSubTopics","setApiSubTopics","useIntl","onTopicCopy","setTimeout","setPubAndSubTopics","allTopics","allApiTopics","apiPubTopicList","publishTopics","t","e","toString","includes","apiSubTopicList","subscribeTopics","useEffect","client","promisedApi","getAllTopics","apiTopicList","obj","entry","parts","getSubscriptionAdditionalInfo","appInner","applicationName","solaceDeployedEnvironments","solaceURLs","protocol","endpointURL","SolaceTopicsObject","mqttSyntax","defaultSyntax","status","ResourceNotFound","setProtocolTopics","selectedEnv","SubscriptionNotFound","mt","TextField","select","fullWidth","onChange","selectedApp","target","app","helperText","SelectProps","native","environmentDisplayName","upperCaseString","pt","Divider","mr","InputBase","inputProps","Avatar","sizes","interactive","navigator","clipboard","writeText","p","Breadcrumb","useContext","breadcrumbDocument","pages","route","selected","setSelected","detectCurrentMenu","locationLocal","pathname","i","test1","RegExp","test2","match","listen","VerticalDivider","separator","NavigateNextIcon","MUILink","document","styles","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","stepsLength","handleCancel","handleTest","appCreateFormWrapper","warningIcon","throttlingPolicyList","setThrottlingPolicyList","applicationRequest","setApplicationRequest","throttlingPolicy","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","getKeyManagers","Promise","all","tierResponse","allAttributes","keyManagers","throttlingPolicyListLocal","newRequest","_objectSpread","allAppAttr","hidden","responseKeyManagerList","hasValidKMInner","x","px","ApplicationCreateForm","updateApplicationRequest","validateName","trim","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","chip","index","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","applicationId","PROCEED","BLOCKED","message","mb","ml","InlineMessage","subscriptionRequest","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","tierName","SubscribeToApi","applicationsAvailable","updateSubscriptionRequest","subscribeToApplication","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","TabPanel","children","other","_objectWithoutProperties","_excluded","role","tokenWrapper","titleSub","boxWrapper","stepComponents","CreateAppStep","SubscribeToAppStep","setNextActive","keyManager","setKeyManager","keyRequest","setKeyRequest","keyType","supportedGrantTypes","callbackUrl","additionalProperties","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerListDefault","filteredGrantTypes","availableGrantTypes","k","newKeyRequest","lg","FormHelperText","Table","TableBody","TableRow","TableCell","scope","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","m","generateKeys","Application","keyState","setKeyType","selectedTab","setSelectedTab","subscriptionScopes","setSubscriptionScopes","accessTokenRequest","setAccessTokenRequest","timeout","scopesSelected","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","updateAccessTokenRequest","generateAccessToken","generateToken","createdToken","my","mx","ViewToken","token","isOauth","completeStep","Wizard","Component","stepStatus","_ref2","steps","redirect","CurrentStepComponent","Stepper","activeStep","Step","StepLabel","handleNext","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","AsyncApiConsole","Overview","Documents","Credentials","Comments","Sdk","AsyncApiDefinition","ApiChat","LoadableSwitch","withRouter","setbreadcrumbDocument","apiChatEnabled","params","redirectURL","tryoutRoute","CONSTANTS","API_TYPES","GRAPHQL","Route","WS","WEBSUB","SSE","ASYNC","Suspense","fallback","Progress","Switch","Redirect","exact","from","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalLeftMinView","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","detailsContent","contentExpandView","shiftLeft","contentLoader","contentLoaderRightMenu","expandIconColor","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","breakpoints","down","borderRight","rootBackground","DetailsLegacy","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","user1","User","open","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","applications","subscribedApplications","element","policy","applicationInfo","subscribedAppIds","sub","filteredApp","overviewHiden","xo","tryOutExpanded","setDetailsAPI","handleDrawerClose","handleDrawerOpen","getSettings","prevApiUuid","newApiUuid","setUser","isAsyncAPI","rootIconSize","rootIconTextVisible","rootIconVisible","apiDetailPages","showCredentials","showComments","showTryout","showDocuments","showSdks","showAsyncSpecification","showSolaceTopics","prefix","sufix","globalStyle","pathPrefix","isWidget","searchParams","isAsyncApi","Helmet","LeftMenuItem","iconText","gatewayVendor","Accordion","expanded","_event","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","QuestionAnswerIcon","ArrowBackIosIcon","ArrowForwardIosIcon","ChatBotIcon","toggleChatbot","handleDisableChatbot","chatbotDisabled","showCloseButton","setShowCloseButton","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","Fab","ChatIcon","handleCloseIconClick","CloseIcon","stroke","ChatInput","onSend","setContent","notificationOpen","setNotificationOpen","marketplaceAssistantEnabled","aiAuthTokenProvided","useSettingsContext","handleSend","placeholder","shiftKey","preventDefault","keyCode","multiline","maxRows","InputProps","endAdornment","InputAdornment","SendIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleCloseNotification","sx","ChatMessage","outerBoxRef","useRef","colorMap","profileStyle","messageStyle","wordWrap","PersonIcon","charAt","ref","apis","light","dark","getColorFromLetter","letter","charLightColor","charNumber","String","fromCharCode","r","g","b","Utils","hexToRGBHash","rgbToHex","Math","ceil","href","apiPath","rel","version","shape","string","arrayOf","Loader","ChatMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","authTokenNotProvidedWarning","marketplaceAssistantDocLink","LaunchIcon","severity","bgcolor","instanceOf","Array","bool","func","mainHeader","chatbotNameBox","chatbotName","borderLeft","alpha","common","black","Header","toggleFullScreen","isClicked","FullscreenExitIcon","FullscreenIcon","RestartAltTwoToneIcon","ExpandMoreTwoToneIcon","predefinedAnswers","hi","hiii","hello","hey","greetings","thanks","bye","goodbye","calculateStringSimilarity","string1","string2","str1","str2","subsequenceMap","Map","subsequence","substr","set","has","matchCount","j","ChatWindow","toggleClearChatbot","setMessages","introMessage","responseRef","apiCall","setIsClicked","apiLimitExceeded","setApiLimitExceeded","apisCount","setApisCount","setLimit","setWindowSize","innerWidth","innerHeight","getMarketplaceAssistantApiCount","apiCount","apiLimit","handleResize","addEventListener","removeEventListener","ResizableBox","minConstraints","maxConstraints","resizeHandles","zIndex","handle","handleClear","async","inputString","bestMatch","bestScore","searchString","entries","comparisonString","score","findBestMatchingAnswer","onReset","showChatbot","setShowChatbot","setLoading","setChatbotDisabled","pathName","origin","messagesJSON","stringify","timestamp","Date","now","loggedInUser","storedData","storedMessages","messagePayload","apiList","marketplaceAssistantExecute","result","apiPaths","err","errorMessage","TagCloudListing","CommonListing","AISearchAssistant","Details","setAllTags","mainPage","image","ApiTagThumb","tagLink","linkTextWrapper","mainPageList","mainPageAllApis","showAllApis","apisTagCloudGroup","keyInner","titleBar","buttonLeft","buttonsWrapper","legend","inputText","buttonRightLink","FormControl","FormControlOdd","quotaHelp","subscribeRoot","subscribeRootSmall","smallDisplay","smallDisplayFix","selectMenuRoot","appDropDown","StyledGrid","borderBottomWidth","borderBottomStyle","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","renderSmall","handleChange","field","InputLabel","shrink","for","Autocomplete","disableClearable","getOptionLabel","option","renderInput","htmlFor","getOptionSelected","groupBy","tierPlan","renderOption","MenuItem","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","selectEmpty","WrappedComponent","SettingsConsumer"],"sourceRoot":""}