{"version":3,"file":"ApiListing.56cb677a55d143a8e63c.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/@mui/icons-material/HighlightOffRounded.js","webpack://@wso2apim/devportal/./source/src/app/components/Applications/Listing/DeleteConfirmation.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Applications/Listing/AppsTableContent.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Applications/Listing/ApplicationTableHead.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Applications/Listing/Listing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/ScopeValidation.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.89 8.7 12 10.59 10.11 8.7a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41L10.59 12 8.7 13.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l1.89 1.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l1.89-1.89c.39-.39.39-1.02 0-1.41-.39-.38-1.03-.38-1.41 0M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'HighlightOffRounded');","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@mui/material/';\nimport Slide from '@mui/material/Slide';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst DeleteConfirmation = (props) => {\n    const { handleAppDelete, isDeleteOpen, toggleDeleteConfirmation } = props;\n    return (\n        <Dialog open={isDeleteOpen} transition={Slide} role='alertdialog'>\n            <DialogTitle>\n                <FormattedMessage\n                    id='Applications.Listing.DeleteConfirmation.dialog.title'\n                    defaultMessage='Delete Application'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.text.description'\n                        defaultMessage='The application will be removed'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button dense color='grey' onClick={toggleDeleteConfirmation}>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    id='itest-confirm-application-delete'\n                    size='small'\n                    variant='outlined'\n                    color='primary'\n                    onClick={handleAppDelete}\n                >\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog,delete'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\nDeleteConfirmation.propTypes = {\n    handleAppDelete: PropTypes.func.isRequired,\n    isDeleteOpen: PropTypes.bool.isRequired,\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n};\nexport default DeleteConfirmation;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Icon from '@mui/material/Icon';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport PropTypes from 'prop-types';\nimport AuthManager from 'AppData/AuthManager';\n\nconst PREFIX = 'AppsTableContent';\n\nconst classes = {\n    head: `${PREFIX}-head`,\n    body: `${PREFIX}-body`,\n    root: `${PREFIX}-root`,\n    root2: `${PREFIX}-root2`,\n    fullHeight: `${PREFIX}-fullHeight`,\n    tableRow: `${PREFIX}-tableRow`,\n    appOwner: `${PREFIX}-appOwner`,\n    appName: `${PREFIX}-appName`,\n};\n\nconst StyledTableBody = styled(TableBody)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.fullHeight}`]: {\n        height: '100%',\n    },\n\n    [`& .${classes.tableRow}`]: {\n        height: theme.spacing(5),\n        '& td': {\n            padding: theme.spacing(0.5),\n        },\n    },\n\n    [`& .${classes.appOwner}`]: {\n        pointerEvents: 'none',\n    },\n\n    [`& .${classes.appName}`]: {\n        '& a': {\n            color: '#1b9ec7 !important',\n        },\n    },\n}));\n\nconst StyledTableCell = TableCell;\n\nconst StyledTableRow = TableRow;\n/**\n *\n *\n * @class AppsTableContent\n * @extends {Component}\n */\nclass AppsTableContent extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n        };\n        this.APPLICATION_STATES = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n            REJECTED: 'REJECTED',\n            DELETE_PENDING: 'DELETE_PENDING',\n        };\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof AppsTableContent\n     */\n    render() {\n        const {\n            apps, toggleDeleteConfirmation,\n        } = this.props;\n        const { notFound } = this.state;\n        let appsTableData = [];\n\n        if (apps) {\n            appsTableData = [...apps.values()].map((app) => {\n                const appInner = app;\n                appInner.deleting = false;\n                return appInner;\n            });\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        return (\n            <StyledTableBody className={classes.fullHeight}>\n                {appsTableData\n                    .map((app) => {\n                        const isAppOwner = app.owner.toLowerCase() === AuthManager.getUser().name.toLowerCase();\n                        return (\n                            <StyledTableRow\n                                className={classes.tableRow}\n                                key={app.applicationId}\n                                data-testid={'row-' + app.name}\n                                classes={{\n                                    root: classes.root2,\n                                }}\n                            >\n                                <StyledTableCell\n                                    align='left'\n                                    className={classes.appName}\n                                    classes={{\n                                        head: classes.head,\n                                        body: classes.body,\n                                        root: classes.root,\n                                    }}\n                                >\n                                    {app.status === this.APPLICATION_STATES.APPROVED\n                                        || app.status === this.APPLICATION_STATES.DELETE_PENDING ? (\n                                            <Link to={'/applications/' + app.applicationId}>{app.name}</Link>\n                                        ) : (\n                                            app.name\n                                        )}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                    align='left'\n                                    classes={{\n                                        head: classes.head,\n                                        body: classes.body,\n                                        root: classes.root,\n                                    }}\n                                >\n                                    {app.owner.toLowerCase()}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                    align='left'\n                                    classes={{\n                                        head: classes.head,\n                                        body: classes.body,\n                                        root: classes.root,\n                                    }}\n                                >\n                                    {app.throttlingPolicy}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                    align='left'\n                                    classes={{\n                                        head: classes.head,\n                                        body: classes.body,\n                                        root: classes.root,\n                                    }}\n                                >\n                                    {app.status === this.APPLICATION_STATES.APPROVED && (\n                                        <Typography variant='subtitle1' component='label' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.active'\n                                                defaultMessage='ACTIVE'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.CREATED && (\n                                        <>\n                                            <Typography\n                                                variant='subtitle1'\n                                                component='label'\n                                                gutterBottom\n                                            >\n                                                <FormattedMessage\n                                                    id='Applications.Listing.AppsTableContent.inactive'\n                                                    defaultMessage='INACTIVE'\n                                                />\n\n                                            </Typography>\n                                            <Typography variant='caption' style={{ textIndent: '10px', display: 'inline-block' }}>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.AppsTableContent.wait.approval'\n                                                    defaultMessage='waiting for approval'\n                                                />\n                                            </Typography>\n                                        </>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.REJECTED && (\n                                        <Typography variant='subtitle1' component='label' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.rejected'\n                                                defaultMessage='REJECTED'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.DELETE_PENDING && (\n                                        <Typography variant='subtitle1' component='label' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.deletePending'\n                                                defaultMessage='DELETE PENDING'\n                                            />\n                                        </Typography>\n                                    )}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                    align='left'\n                                    classes={{\n                                        head: classes.head,\n                                        body: classes.body,\n                                        root: classes.root,\n                                    }}\n                                >\n                                    {app.subscriptionCount}\n                                </StyledTableCell>\n                                <StyledTableCell\n                                    align='left'\n                                    classes={{\n                                        head: classes.head,\n                                        body: classes.body,\n                                        root: classes.root,\n                                    }}\n                                >\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                                        resourceMethod={resourceMethods.PUT}\n                                    >\n                                        {(app.status === this.APPLICATION_STATES.APPROVED\n                                        || app.status === this.APPLICATION_STATES.DELETE_PENDING) && (\n                                            <Tooltip title={isAppOwner\n                                                ? (\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.AppsTableContent.edit.tooltip'\n                                                        defaultMessage='Edit'\n                                                    />\n                                                ) : (\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.AppsTableContent.edit.tooltip.disabled.button'\n                                                        defaultMessage='Not allowed to modify shared applications'\n                                                    />\n                                                )}\n                                            >\n                                                <span>\n                                                    <Link\n                                                        to={`/applications/${app.applicationId}/edit/`}\n                                                        className={!isAppOwner && classes.appOwner}\n                                                    >\n                                                        <IconButton disabled={!isAppOwner} aria-label={'Edit' + app.name} size='large'>\n                                                            <Icon>\n                                                                edit\n                                                            </Icon>\n                                                        </IconButton>\n                                                    </Link>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </ScopeValidation>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                                        resourceMethod={resourceMethods.DELETE}\n                                    >\n                                        <Tooltip title={isAppOwner ? (\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.delete.tooltip'\n                                                defaultMessage='Delete'\n                                            />\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.delete.tooltip.disabled.button'\n                                                defaultMessage='Not allowed to delete shared applications'\n                                            />\n                                        )}\n                                        >\n                                            <span>\n                                                <IconButton\n                                                    className='itest-application-delete-button'\n                                                    disabled={app.deleting || !isAppOwner\n                                                        || app.status === this.APPLICATION_STATES.DELETE_PENDING}\n                                                    data-appid={app.applicationId}\n                                                    onClick={toggleDeleteConfirmation}\n                                                    color='default'\n                                                    aria-label={'Delete' + app.name}\n                                                    id={'delete-' + app.name + '-btn'}\n                                                    size='large'\n                                                >\n                                                    <Icon>delete</Icon>\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    </ScopeValidation>\n                                    {app.deleting && <CircularProgress size={24} />}\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        );\n                    })}\n            </StyledTableBody>\n        );\n    }\n}\nAppsTableContent.propTypes = {\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n    apps: PropTypes.instanceOf(Map).isRequired,\n};\nexport default (AppsTableContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * @inheritdoc\n * @class ApplicationTableHead\n * @extends {Component}\n */\nconst applicationTableHead = (props) => {\n    const createSortHandler = (property) => (event) => {\n        props.onRequestSort(event, property);\n    };\n    const columnData = [\n        {\n            id: 'name',\n            numeric: false,\n            disablePadding: true,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.name'\n                defaultMessage='Name'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'owner',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.owner'\n                defaultMessage='Owner'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'throttlingTier',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.policy'\n                defaultMessage='Policy'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'workflowStatus',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.workflow.status'\n                defaultMessage='Workflow Status'\n            />),\n            sorting: false,\n        },\n        {\n            id: 'subscriptions',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.subscriptions'\n                defaultMessage='Subscriptions'\n            />),\n            sorting: false,\n        },\n        {\n            id: 'actions',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.actions'\n                defaultMessage='Actions'\n            />),\n            sorting: false,\n        },\n    ];\n    const { order, orderBy } = props;\n    return (\n        <TableHead>\n            <TableRow>\n                {columnData.map((column) => {\n                    return (\n                        <TableCell\n                            key={column.id}\n                            align='left'\n                            sortDirection={orderBy === column.id ? order : false}\n                        >\n                            {column.sorting ? (\n                                <TableSortLabel\n                                    active={orderBy === column.id}\n                                    direction={order}\n                                    onClick={createSortHandler(column.id)}\n                                >\n                                    {column.label}\n                                </TableSortLabel>\n                            ) : (\n                                column.label\n                            )}\n                        </TableCell>\n                    );\n                })}\n            </TableRow>\n        </TableHead>\n    );\n};\napplicationTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n};\nexport default applicationTableHead;\n","/* eslint-disable no-nested-ternary */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TablePagination from '@mui/material/TablePagination';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport TableFooter from '@mui/material/TableFooter';\nimport TableRow from '@mui/material/TableRow';\nimport Box from '@mui/material/Box';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Application from 'AppData/Application';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport { appSettings } from 'Settings';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport HighlightOffRoundedIcon from '@mui/icons-material/HighlightOffRounded';\nimport AppsTableContent from './AppsTableContent';\nimport ApplicationTableHead from './ApplicationTableHead';\nimport DeleteConfirmation from './DeleteConfirmation';\n\n/**\n * @inheritdoc\n * @class Listing\n * @extends {Component}\n */\nclass Listing extends Component {\n    /**\n     *\n     * @param {any} props properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            order: 'asc',\n            orderBy: 'name',\n            data: null,\n            page: 0,\n            rowsPerPage: Listing.rowsPerPage,\n            isApplicationSharingEnabled: true,\n            isDeleteOpen: false,\n            totalApps: 0,\n            query: '',\n        };\n        this.handleAppDelete = this.handleAppDelete.bind(this);\n        this.setQuery = this.setQuery.bind(this);\n        this.handleSearchKeyPress = this.handleSearchKeyPress.bind(this);\n        this.filterApps = this.filterApps.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    /**\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.updateApps();\n        this.isApplicationGroupSharingEnabled();\n    }\n\n    /**\n     * @memberof Listing\n     */\n     constfilterApps = () => {\n         this.setState({ page: 0 });\n         this.updateApps(undefined, 0);\n         this.isApplicationGroupSharingEnabled();\n     }\n\n    clearSearch = () => {\n        this.setState({ query: '', data: null, page: 0 });\n        this.updateApps('', 0);\n        this.isApplicationGroupSharingEnabled();\n    }\n\n    /**\n     * retrieve Settings from the context and check the application sharing enabled\n     * @param {*} settingsData required data\n     */\n    isApplicationGroupSharingEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.applicationSharingEnabled;\n        this.setState({ isApplicationSharingEnabled: enabled });\n    }\n\n    /**\n     * @memberof Listing\n     */\n    setQuery = (event) => {\n        const newQuery = event.target.value;\n        if (newQuery === '') {\n            this.clearSearch();\n        } else {\n            this.setState({ query: newQuery });\n        }\n    };\n\n    /**\n     * @memberof Listing\n     */\n    updateApps = (newQuery, newPage) => {\n        const {\n            page, rowsPerPage, order, orderBy, query,\n        } = this.state;\n        const queryToSearch = newQuery !== undefined ? newQuery : query;\n        const pageToSearch = newPage !== undefined ? newPage : page;\n        const promisedApplications = Application.all(rowsPerPage, pageToSearch * rowsPerPage, order, orderBy, queryToSearch);\n        promisedApplications\n            .then((applications) => {\n                const { pagination: { total } } = applications;\n                // Applications list put into map, to make it efficient when deleting apps (referring back to an App)\n                const apps = new Map();\n                applications.list.map((app) => apps.set(app.applicationId, app)); // Store application against its UUID\n                this.setState({ data: apps, totalApps: total });\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    // eslint-disable-next-line react/no-unused-state\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    window.location = appSettings.context + '/services/configs';\n                }\n            });\n    }\n\n    /**\n     * @param{*} event event\n     * @param{*} property sorting method\n     */\n    handleRequestSort = (event, property) => {\n        const { orderBy, order } = this.state;\n        let currentOrder = 'desc';\n        if (orderBy === property) {\n            currentOrder = order === 'desc' ? 'asc' : 'desc';\n            this.setState({ order: currentOrder }, this.updateApps);\n        } else {\n            this.setState({ order: currentOrder, orderBy: property }, this.updateApps);\n        }\n    };\n\n    /**\n     *\n     * @param {*} event event\n     * @param {*} page page\n     * @memberof Listing\n     */\n    handleChangePage = (event, page) => {\n        this.setState({ page }, this.updateApps);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof Listing\n     */\n    handleChangeRowsPerPage = (event) => {\n        const nextRowsPerPage = event.target.value;\n        const { rowsPerPage, page } = this.state;\n        const rowsPerPageRatio = rowsPerPage / nextRowsPerPage;\n        const nextPage = Math.floor(page * rowsPerPageRatio);\n        this.setState({ rowsPerPage: nextRowsPerPage, page: nextPage }, this.updateApps);\n    };\n\n    /**\n     * @memberof Listing\n     */\n    handleClickOpen = () => {\n        const { history } = this.props;\n        history.push('/applications/create');\n    };\n\n    /**\n     * @memberof Listing\n     */\n     filterApps = () => {\n         this.setState({ page: 0 });\n         this.updateApps(undefined, 0);\n         this.isApplicationGroupSharingEnabled();\n     }\n\n    toggleDeleteConfirmation = (event) => {\n        let id = '';\n        if (event) {\n            id = event.currentTarget.getAttribute('data-appid');\n        }\n        this.setState(({ isDeleteOpen }) => ({ isDeleteOpen: !isDeleteOpen, deletingId: id }));\n    }\n\n    /**\n     * @memberof Listing\n     * @param {Event} event click event\n     */\n    handleSearchKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({ page: 0 });\n            this.updateApps(undefined, 0);\n            this.isApplicationGroupSharingEnabled();\n        }\n    }\n\n    /**\n     * @param {*} event event\n     * @memberof Listing\n     */\n    handleAppDelete() {\n        const { data, deletingId, page } = this.state;\n        const { intl } = this.props;\n        const newData = new Map([...data]);\n        const app = newData.get(deletingId);\n        app.deleting = true;\n\n        let message = intl.formatMessage({\n            defaultMessage: 'Application {name} deleted successfully!',\n            id: 'Applications.Listing.Listing.application.deleted.successfully',\n        }, { name: app.name });\n        const promisedDelete = Application.deleteApp(deletingId);\n        promisedDelete.then((status) => {\n            if (status === 201) {\n                newData.delete(deletingId);\n                Alert.info(intl.formatMessage({\n                    defaultMessage: 'Delete request created for application {name}',\n                    id: 'Applications.Listing.Listing.application.deleting.requested',\n                }, { name: app.name }));\n                this.toggleDeleteConfirmation();\n                // Page is reduced by 1, when there is only one application in a\n                // particular page and it is deleted (except when in first page)\n                if (newData.size === 0 && page !== 0) {\n                    this.setState((state) => ({ page: state.page - 1 }));\n                }\n                this.updateApps();\n            } else if (status === 200) {\n                newData.delete(deletingId);\n                Alert.info(message);\n                this.toggleDeleteConfirmation();\n                // Page is reduced by 1, when there is only one application in a\n                // particular page and it is deleted (except when in first page)\n                if (newData.size === 0 && page !== 0) {\n                    this.setState((state) => ({ page: state.page - 1 }));\n                }\n                this.updateApps();\n            }\n        }).catch((error) => {\n            console.log(error);\n            message = intl.formatMessage({\n                defaultMessage: 'Error while deleting application {name}',\n                id: 'Applications.Listing.Listing.application.deleting.error',\n            }, { name: app.name });\n            Alert.error(message);\n        });\n    }\n\n    static rowsPerPage = 10;\n\n    /**\n    * @inheritdoc\n    */\n    render() {\n        const {\n            data, order, orderBy, rowsPerPage, page, isApplicationSharingEnabled,\n            isDeleteOpen, totalApps, query,\n        } = this.state;\n        const { intl } = this.props;\n        const paginationEnabled = totalApps > Listing.rowsPerPage;\n        return (\n            <Box sx={{ flexGrow: 1 }}>\n                <Box sx={(theme) => ({\n                    minHeight: 80,\n                    background: theme.custom.infoBar.background,\n                    color: theme.palette.getContrastText(theme.custom.infoBar.background),\n                    borderBottom: `solid 1px ${theme.palette.grey.A200}`,\n                    display: 'block',\n                })}\n                >\n                    <Box display='flex' flexDirection='row' justifyContent='flex-start' alignItems='center'>\n                        <Box sx={(theme) => ({\n                            paddingTop: theme.spacing(1.5),\n                            paddingLeft: theme.spacing(3),\n                            paddingRight: theme.spacing(2.5),\n                        })}\n                        >\n                            <CustomIcon\n                                strokeColor='#1a1f2f'\n                                width={42}\n                                height={42}\n                                icon='applications'\n                            />\n                        </Box>\n                        <Box sx={{ display: 'flex' }}>\n                            <Typography\n                                variant='h4'\n                                component='h1'\n                                sx={{\n                                    paddingTop: 1,\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='Applications.Listing.Listing.applications'\n                                    defaultMessage='Applications'\n                                />\n                            </Typography>\n                            <Box sx={(theme) => ({\n                                paddingLeft: theme.spacing(2),\n                            })}\n                            >\n                                <ScopeValidation\n                                    resourcePath={resourcePaths.APPLICATIONS}\n                                    resourceMethod={resourceMethods.POST}\n                                >\n                                    <Link id='itest-application-create-link' to='/applications/create'>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                        >\n                                            <FormattedMessage\n                                                id='Applications.Create.Listing.add.new.application'\n                                                defaultMessage='Add New Application'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </ScopeValidation>\n                            </Box>\n                        </Box>\n                    </Box>\n                    <Box display='flex' pl={4}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage\n                                id='Applications.Listing.Listing.logical.description'\n                                defaultMessage={`An application is a logical collection of APIs. \n                                        Applications allow you to use a single access token to invoke a\n                                         collection of APIs and to subscribe to one API multiple times\n                                          and allows unlimited access by default.`}\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n                <Paper sx={{ margin: 4 }}>\n                    <AppBar sx={{ borderBottom: '1px solid rgba(0, 0, 0, 0.12)' }} position='static' color='default' elevation={0}>\n                        <Toolbar>\n                            <Grid container spacing={2} alignItems='center'>\n                                <Grid item>\n                                    <SearchIcon sx={{ display: 'block' }} color='inherit' />\n                                </Grid>\n                                <Grid item xs>\n                                    <TextField\n                                        variant='standard'\n                                        fullWidth\n                                        id='search-label'\n                                        label={intl.formatMessage({\n                                            defaultMessage: 'Search',\n                                            id: 'Applications.Listing.Listing.applications.search.label',\n                                        })}\n                                        placeholder={intl.formatMessage({\n                                            defaultMessage: 'Search application by name',\n                                            id: 'Applications.Listing.Listing.applications.search.placeholder',\n                                        })}\n                                        InputProps={{\n                                            disableUnderline: true,\n                                            className: (theme) => ({\n                                                fontSize: theme.typography.fontSize,\n                                                height: 50,\n                                            }),\n                                        }}\n                                        value={query}\n                                        onChange={this.setQuery}\n                                        onKeyPress={this.handleSearchKeyPress}\n                                    />\n                                    {query.length > 0 && (\n                                        <Tooltip title={intl.formatMessage({\n                                            defaultMessage: 'Clear Search',\n                                            id: 'Applications.Listing.Listing.clear.search',\n                                        })}\n                                        >\n                                            <IconButton\n                                                aria-label='delete'\n                                                sx={{\n                                                    position: 'absolute',\n                                                    right: 111,\n                                                    top: 13,\n                                                }}\n                                                onClick={this.clearSearch}\n                                                size='large'\n                                            >\n                                                <HighlightOffRoundedIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        variant='contained'\n                                        color='grey'\n                                        sx={(theme) => ({\n                                            marginRight: theme.spacing(1),\n                                            background: theme.palette.grey[300],\n                                        })}\n                                        onClick={this.filterApps}\n                                    >\n                                        <FormattedMessage\n                                            id='Applications.Listing.Listing.applications.search'\n                                            defaultMessage='Search'\n                                        />\n\n                                    </Button>\n\n                                </Grid>\n                            </Grid>\n                        </Toolbar>\n                    </AppBar>\n                    {!data && (\n                        <Box sx={{ margin: 0 }}>\n                            <Loading />\n                        </Box>\n                    )}\n                    {data && (\n                        <Box sx={{ margin: 0 }}>\n                            {data.size > 0 ? (\n                                <Box sx={(theme) => ({\n                                    marginTop: 0,\n                                    margin: 'auto',\n                                    maxHeight: theme.spacing(90),\n                                    height: theme.spacing(90),\n                                    overflow: 'scroll',\n                                })}\n                                >\n                                    <Paper sx={(theme) => ({\n                                        '& table tr td': {\n                                            paddingLeft: theme.spacing(1),\n                                        },\n                                        '& table tr td:first-child, & table tr th:first-child': {\n                                            paddingLeft: theme.spacing(2),\n                                        },\n                                        '& table tr:nth-child(even)': {\n                                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                                            '& td, & a, & .material-icons': {\n                                                color: theme\n                                                    .palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                                            },\n                                        },\n                                        '& table tr:nth-child(odd)': {\n                                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                                            '& td, & a, & .material-icons': {\n                                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                                            },\n                                        },\n                                        '& table th': {\n                                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                                            paddingLeft: theme.spacing(1),\n                                        },\n                                        '& table tr td button.Mui-disabled span.material-icons': {\n                                            color: theme.palette.action.disabled,\n                                        },\n                                    })}\n                                    >\n                                        <Table id='itest-application-list-table'>\n                                            <ApplicationTableHead\n                                                order={order}\n                                                orderBy={orderBy}\n                                                onRequestSort={this.handleRequestSort}\n                                            />\n                                            <AppsTableContent\n                                                handleAppDelete={this.handleAppDelete}\n                                                apps={data}\n                                                page={page}\n                                                rowsPerPage={rowsPerPage}\n                                                order={order}\n                                                orderBy={orderBy}\n                                                isApplicationSharingEnabled={isApplicationSharingEnabled}\n                                                toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                                            />\n                                            {paginationEnabled\n                                                && (\n                                                    <TableFooter>\n                                                        <TableRow>\n                                                            <TablePagination\n                                                                component='td'\n                                                                count={totalApps}\n                                                                rowsPerPage={rowsPerPage}\n                                                                rowsPerPageOptions={[5, 10, 15]}\n                                                                labelRowsPerPage='Show'\n                                                                page={page}\n                                                                backIconButtonProps={{\n                                                                    'aria-label': 'Previous Page',\n                                                                }}\n                                                                nextIconButtonProps={{\n                                                                    'aria-label': 'Next Page',\n                                                                }}\n                                                                onPageChange={this.handleChangePage}\n                                                                onRowsPerPageChange={this.handleChangeRowsPerPage}\n                                                            />\n                                                        </TableRow>\n                                                    </TableFooter>\n                                                )}\n                                        </Table>\n                                    </Paper>\n                                </Box>\n                            ) : (\n                                query === '' ? (\n                                    <Box sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                        padding: 40,\n                                    }}\n                                    >\n                                        <Typography variant='h6' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.Listing.noapps.display.title'\n                                                defaultMessage='No Applications Available'\n                                            />\n                                        </Typography>\n\n                                        <Typography variant='body2' gutterBottom>\n                                            <a\n                                                onClick={this.handleClickOpen}\n                                                onKeyDown={this.handleClickOpen}\n                                                className={(theme) => ({\n                                                    color: theme.palette.primary.light,\n                                                    cursor: 'pointer',\n                                                })}\n                                            >\n                                                <FormattedMessage\n                                                    id='Applications.Listing.Listing.noapps.display.link.text'\n                                                    defaultMessage='Add New Application'\n                                                />\n                                            </a>\n                                        </Typography>\n                                    </Box>\n                                )\n                                    : (\n                                        <Box sx={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            flexDirection: 'column',\n                                            padding: 40,\n                                        }}\n                                        >\n                                            <Typography variant='h6' gutterBottom>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.Listing.applications.no.search.results.title'\n                                                    defaultMessage='No Matching Applications'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body2' gutterBottom>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.Listing.applications.no.search.results.body.prefix'\n                                                    defaultMessage='Check the spelling or try to '\n                                                />\n                                                <a\n                                                    onClick={this.clearSearch}\n                                                    onKeyDown={this.clearSearch}\n                                                    className={(theme) => ({\n                                                        color: theme.palette.primary.light,\n                                                        cursor: 'pointer',\n                                                    })}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.Listing.applications.no.search.results.body.sufix'\n                                                        defaultMessage='clear the search'\n                                                    />\n                                                </a>\n                                            </Typography>\n                                        </Box>\n                                    )\n                            )}\n                            <DeleteConfirmation\n                                handleAppDelete={this.handleAppDelete}\n                                isDeleteOpen={isDeleteOpen}\n                                toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                            />\n                        </Box>\n                    )}\n\n                </Paper>\n            </Box>\n        );\n    }\n}\nListing.contextType = Settings;\nListing.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.string,\n        flex: PropTypes.string,\n        content: PropTypes.string,\n        mainIconWrapper: PropTypes.string,\n        mainTitle: PropTypes.string,\n        mainTitleWrapper: PropTypes.string,\n        createLinkWrapper: PropTypes.string,\n        appContent: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl((Listing));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthManager from '../../data/AuthManager';\n\nconst resourcePaths = {\n    APIS: '/apis',\n    SINGLE_API: '/apis/{apiId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    APPLICATIONS: '/applications',\n    SINGLE_APPLICATION: '/applications/{applicationId}',\n    APPLICATION_GENERATE_KEYS: '/applications/{applicationId}/generate-keys',\n    APPLICATION_GENERATE_KEY_TYPE: '/applications/{applicationId}/keys/{keyType}',\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SINGLE_SUBSCRIPTION: '/subscriptions/{subscriptionId}',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription:',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethods = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nclass ScopeValidation extends React.Component {\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath, resourceMethod } = this.props;\n        const hasScope = AuthManager.hasScopes(resourcePath, resourceMethod);\n        if (hasScope) {\n            hasScope.then((haveScope) => {\n                this.setState({ haveScope });\n            });\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        if (this.state.haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport {\n    ScopeValidation,\n    resourceMethods,\n    resourcePaths,\n};\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","DeleteConfirmation","props","handleAppDelete","isDeleteOpen","toggleDeleteConfirmation","React","Dialog","open","transition","Slide","role","DialogTitle","FormattedMessage","id","defaultMessage","DialogContent","DialogContentText","DialogActions","Button","dense","color","onClick","size","variant","propTypes","PropTypes","isRequired","PREFIX","classes","head","body","root","root2","fullHeight","tableRow","appOwner","appName","StyledTableBody","styled","TableBody","_ref","theme","height","spacing","padding","pointerEvents","StyledTableCell","TableCell","StyledTableRow","TableRow","AppsTableContent","Component","constructor","super","this","state","notFound","APPLICATION_STATES","CREATED","APPROVED","REJECTED","DELETE_PENDING","render","apps","appsTableData","values","map","app","appInner","deleting","ResourceNotFound","className","isAppOwner","owner","toLowerCase","AuthManager","getUser","name","key","applicationId","align","status","Link","to","throttlingPolicy","Typography","component","gutterBottom","style","textIndent","display","subscriptionCount","ScopeValidation","resourcePath","resourcePaths","SINGLE_APPLICATION","resourceMethod","resourceMethods","PUT","Tooltip","title","IconButton","disabled","Icon","DELETE","CircularProgress","Map","applicationTableHead","columnData","numeric","disablePadding","label","sorting","order","orderBy","TableHead","column","sortDirection","TableSortLabel","active","direction","property","event","onRequestSort","Listing","_defineProperty","setState","page","updateApps","undefined","isApplicationGroupSharingEnabled","query","data","enabled","context","settings","applicationSharingEnabled","isApplicationSharingEnabled","newQuery","target","value","clearSearch","newPage","rowsPerPage","queryToSearch","pageToSearch","Application","all","then","applications","pagination","total","list","set","totalApps","catch","error","console","log","window","location","appSettings","currentOrder","nextRowsPerPage","rowsPerPageRatio","nextPage","Math","floor","history","push","currentTarget","getAttribute","deletingId","bind","setQuery","handleSearchKeyPress","filterApps","componentDidMount","intl","newData","get","message","formatMessage","deleteApp","delete","Alert","info","paginationEnabled","Box","sx","flexGrow","minHeight","background","custom","infoBar","palette","getContrastText","borderBottom","grey","A200","flexDirection","justifyContent","alignItems","paddingTop","paddingLeft","paddingRight","CustomIcon","strokeColor","width","icon","APPLICATIONS","POST","pl","Paper","margin","AppBar","position","elevation","Toolbar","Grid","container","item","SearchIcon","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","fontSize","typography","onChange","onKeyPress","length","right","top","HighlightOffRoundedIcon","marginRight","Loading","marginTop","maxHeight","overflow","backgroundColor","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","action","Table","ApplicationTableHead","handleRequestSort","TableFooter","TablePagination","count","rowsPerPageOptions","labelRowsPerPage","backIconButtonProps","nextIconButtonProps","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","handleClickOpen","onKeyDown","primary","light","cursor","contextType","Settings","flex","content","mainIconWrapper","mainTitle","mainTitleWrapper","createLinkWrapper","appContent","injectIntl","APIS","SINGLE_API","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","APPLICATION_GENERATE_KEYS","APPLICATION_GENERATE_KEY_TYPE","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SINGLE_SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","GET","hasScope","hasScopes","haveScope","children"],"sourceRoot":""}