{"version":3,"file":"APIOverview.d7a269a90205a8ef568f.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/@mui/icons-material/CloudDownloadRounded.js","webpack://@wso2apim/devportal/./node_modules/@mui/icons-material/Code.js","webpack://@wso2apim/devportal/./node_modules/@mui/icons-material/MailOutline.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Documents/View.jsx","webpack://@wso2apim/devportal/./node_modules/@mui/material/TableContainer/tableContainerClasses.js","webpack://@wso2apim/devportal/./node_modules/@mui/material/TableContainer/TableContainer.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Social/EmbedCode.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Social/Social.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/TaskState.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GoToTryOut.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SolaceEndpoints.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Environments.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/OverviewDocuments.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SourceDownload.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Overview.jsx","webpack://@wso2apim/devportal/./node_modules/xtend/immutable.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96M17 13l-4.65 4.65c-.2.2-.51.2-.71 0L7 13h3V9h4v4z\"\n}), 'CloudDownloadRounded');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6z\"\n}), 'Code');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 14H4V8l8 5 8-5zm-8-7L4 6h16z\"\n}), 'MailOutline');","/* eslint-disable react/no-children-prop */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, useEffect, useContext, Suspense, lazy,\n} from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Icon from '@mui/material/Icon';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Settings from 'Settings';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus, vs } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport HTMLRender from 'AppComponents/Shared/HTMLRender';\nimport { ApiContext } from '../ApiContext';\nimport Alert from '../../../Shared/Alert';\n\nconst PREFIX = 'View';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    docTitle: `${PREFIX}-docTitle`,\n    docBadge: `${PREFIX}-docBadge`,\n    button: `${PREFIX}-button`,\n    displayURL: `${PREFIX}-displayURL`,\n    displayURLLink: `${PREFIX}-displayURLLink`,\n    docSummary: `${PREFIX}-docSummary`,\n    fileAvailability: `${PREFIX}-fileAvailability`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n\n    [`& .${classes.docTitle}`]: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n\n    [`& .${classes.docBadge}`]: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n\n    [`& .${classes.button}`]: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.displayURL}`]: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n\n    [`& .${classes.displayURLLink}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.docSummary}`]: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n\n    [`& .${classes.fileAvailability}`]: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.8),\n    },\n}));\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        doc, apiId, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [code, setCode] = useState('');\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const restAPI = new API();\n    const { skipHtml } = Settings.app.markdown;\n    const markdownSyntaxHighlighterProps = Settings.app.markdown.syntaxHighlighterProps || {};\n    const { syntaxHighlighterDarkTheme } = Settings.app.markdown;\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(apiId, doc.documentId);\n        docPromise\n            .then((dataDoc) => {\n                let { text } = dataDoc;\n\n                Object.keys(api).forEach((fieldName) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const regex = new RegExp('\\_\\_\\_' + fieldName + '\\_\\_\\_', 'g');\n                    text = text.replace(regex, api[fieldName]);\n                });\n                setCode(text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (doc.sourceType === 'MARKDOWN' || doc.sourceType === 'INLINE') loadContentForDoc();\n        if (doc.sourceType === 'FILE') {\n            const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n            promisedGetContent\n                .then(() => {\n                    setIsFileAvailable(true);\n                })\n                .catch(() => {\n                    setIsFileAvailable(false);\n                });\n        }\n    }, [props.doc]);\n\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     */\n    const downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n        promisedGetContent\n            .then((done) => {\n                downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    return (\n        <Root>\n            {(doc.summary && doc.otherTypeName !== '_overview') && (\n                <Typography variant='body1' className={classes.docSummary}>\n                    {doc.summary}\n                </Typography>\n            )}\n\n            {doc.sourceType === 'MARKDOWN' && (\n                <div className='markdown-content-wrapper'>\n                    <Suspense fallback={<CircularProgress />}>\n                        <ReactMarkdown\n                            skipHtml={skipHtml}\n                            children={code}\n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                                code({\n                                    node, inline, className, children, ...propsInner\n                                }) {\n                                    const match = /language-(\\w+)/.exec(className || '');\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, '')}\n                                            style={syntaxHighlighterDarkTheme ? vscDarkPlus : vs}\n                                            language={match[1]}\n                                            PreTag='div'\n                                            {...propsInner}\n                                            {...markdownSyntaxHighlighterProps}\n                                        />\n                                    ) : (\n                                        <code className={className} {...propsInner}>\n                                            {children}\n                                        </code>\n                                    );\n                                },\n                            }}\n                        />\n                    </Suspense>\n                </div>\n            )}\n            {doc.sourceType === 'INLINE' && <HTMLRender html={code} />}\n            {doc.sourceType === 'URL' && (\n                <a className={classes.displayURL} href={doc.sourceUrl} target='_blank' rel='noreferrer'>\n                    {doc.sourceUrl}\n                    <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                </a>\n            )}\n            {doc.sourceType === 'FILE' && (\n                <Button\n                    variant='contained'\n                    className={classes.button}\n                    disabled={!isFileAvailable}\n                    onClick={handleDownload}\n                >\n                    <FormattedMessage id='Apis.Details.Documents.View.btn.download' defaultMessage='Download' />\n\n                    <Icon>arrow_downward</Icon>\n                </Button>\n            )}\n            {doc.sourceType === 'FILE' && !isFileAvailable && (\n                <Typography className={classes.fileAvailability}>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.View.file.availability'\n                        defaultMessage='No file available'\n                    />\n                </Typography>\n            )}\n        </Root>\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl((View));\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Modal from '@mui/material/Modal';\nimport CodeIcon from '@mui/icons-material/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport FileCopy from '@mui/icons-material/FileCopy';\n\nconst PREFIX = 'EmbedCode';\n\nconst classes = {\n    paper: `${PREFIX}-paper`,\n    codeIcon: `${PREFIX}-codeIcon`,\n    code: `${PREFIX}-code`,\n    iconStyle: `${PREFIX}-iconStyle`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.paper}`]: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n\n    [`& .${classes.codeIcon}`]: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n\n    [`& .${classes.code}`]: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbedCode(props) {\n    const { intl } = props;\n\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embedCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embed API\" />';\n\n    return (\n        <Root>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embedCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <IconButton\n                            id='copy-to-clipbord-icon'\n                            aria-label='Copy to clipboard'\n                            size='large'\n                            onClick={() => { navigator.clipboard.writeText(embedCode).then(onCopy()); }}\n                        >\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </Root>\n    );\n}\n\nexport default injectIntl(EmbedCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbedCode from 'AppComponents/Apis/Details/Social/EmbedCode';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\n\nconst PREFIX = 'Social';\n\nconst classes = {\n    socialLink: `${PREFIX}-socialLink`,\n    oneFlex: `${PREFIX}-oneFlex`,\n    socialLinkWrapper: `${PREFIX}-socialLinkWrapper`,\n    divider: `${PREFIX}-divider`,\n    codeIcon: `${PREFIX}-codeIcon`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.socialLink}`]: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginRight: theme.spacing(1),\n        },\n    },\n\n    [`& .${classes.oneFlex}`]: {\n        flex: 1,\n    },\n\n    [`& .${classes.socialLinkWrapper}`]: {\n        marginTop: 16,\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n\n    [`& .${classes.divider}`]: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n\n    [`& .${classes.codeIcon}`]: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const [slack, github] = [\n        api.additionalProperties.find((prop) => prop.name === 'slack_url'),\n        api.additionalProperties.find((prop) => prop.name === 'github_repo'),\n    ];\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbed, showEmail,\n                },\n            },\n        },\n    } = theme;\n    return (\n        <Root>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {active && (slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {active && showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {active && showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {active && showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {active && showEmbed && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbedCode />\n                    </>\n                )}\n                {active && showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </Root>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Alert from '@mui/material/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n/**\n * @export\n * @param {JSON} props props from parent\n * @return {JSX} rendered output\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'warning';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n        </>\n    );\n}\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer, useContext, useState,\n} from 'react';\nimport Button from '@mui/material/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Backdrop from '@mui/material/Backdrop';\nimport Fade from '@mui/material/Fade';\nimport API from 'AppData/api';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport AuthManager from 'AppData/AuthManager';\nimport CONSTANTS from 'AppData/Constants';\nimport { ApiContext } from './ApiContext';\nimport TaskState from './TaskState';\n\nconst keyStates = {\n    COMPLETED: 'COMPLETED',\n    APPROVED: 'APPROVED',\n    CREATED: 'CREATED',\n    REJECTED: 'REJECTED',\n};\n\nconst restApi = new API();\nconst initialTaskStates = {\n    subscribe: { inProgress: true, completed: false, errors: false },\n    prepare: { inProgress: false, completed: false, errors: false },\n    generate: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n/**\n *\n * @returns {JSX} rendered output\n */\nexport default function GoToTryOut() {\n    const user = AuthManager.getUser();\n    const {\n        api, subscribedApplications, applicationsAvailable, updateSubscriptionData,\n    } = useContext(ApiContext);\n    const defaultApplications = applicationsAvailable.filter((x) => x.label === 'DefaultApplication');\n    const defaultApplication = defaultApplications.length > 0 ? defaultApplications[0] : null;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const intl = useIntl();\n    const history = useHistory();\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('sm'));\n    const isAsyncAPI = (api\n        && (api.type === CONSTANTS.API_TYPES.WS\n            || api.type === CONSTANTS.API_TYPES.WEBSUB\n            || api.type === CONSTANTS.API_TYPES.SSE\n            || api.type === CONSTANTS.API_TYPES.ASYNC));\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const getKeyRequest = async () => {\n        const promisedKeyManagers = restApi.getKeyManagers();\n        return promisedKeyManagers\n            .then((response) => {\n                const keyRequest = {\n                    keyType: 'SANDBOX',\n                    supportedGrantTypes: [],\n                    callbackUrl: '',\n                    additionalProperties: {},\n                    keyManager: '',\n                };\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Setting key request\n                try {\n                    keyRequest.keyManager = selectedKeyManager.id;\n                    // Filtering Grant Types for Token Exchange\n                    keyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes\n                        .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        keyRequest.callbackUrl = 'http://localhost';\n                    }\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n                return keyRequest;\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    const generateKeys = async (keyRequest, applicationId) => {\n        const application = await Application.get(applicationId);\n        const keys = await application.getKeys(keyRequest.keyType);\n        if (keys.size > 0) {\n            return;\n        }\n        application.generateKeys(\n            keyRequest.keyType, keyRequest.supportedGrantTypes,\n            keyRequest.callbackUrl,\n            keyRequest.additionalProperties, keyRequest.keyManager,\n        ).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.keymanager',\n                    defaultMessage: 'Key Generation is Blocked.',\n                }));\n            } else {\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n            return response;\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n\n    const pushToTryout = async () => {\n        await updateSubscriptionData();\n        if (isAsyncAPI) {\n            history.push('/apis/' + api.id + '/definition');\n        } else {\n            history.push('/apis/' + api.id + '/api-console');\n        }\n    };\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof GoToTryOut\n     */\n    const handleTryOutClick = async () => {\n        let throttlingPolicy = null;\n        if (api.tiers && api.tiers.length > 0) {\n            throttlingPolicy = api.tiers[0].tierName;\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n        setShowStatus(true);\n        // Get the request for key generation using the key managers.\n        const keyRequest = await taskManager(getKeyRequest(), 'prepare');\n        // Generate consumer key and secret\n        await taskManager(generateKeys(keyRequest, defaultApplication.value), 'generate');\n        // Subscribe this API to the default application\n        await taskManager(restApi.subscribe(\n            api.id,\n            defaultApplication.value,\n            throttlingPolicy,\n        ), 'subscribe');\n    };\n\n    Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n\n    const redirectButton = isAsyncAPI ? (\n        <Button\n            variant='outlined'\n            color='primary'\n            size='small'\n            classes={{\n                root: { minWidth: 120 },\n                label: { whiteSpace: 'nowrap' },\n            }}\n            onClick={pushToTryout}\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.view.definition'\n                defaultMessage='View Definition'\n            />\n        </Button>\n    ) : (\n        <Button\n            variant='contained'\n            color='primary'\n            size='medium'\n            sx={{\n                whiteSpace: 'nowrap',\n            }}\n            onClick={pushToTryout}\n            aria-label='Go to Try Out page'\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.tryout'\n                defaultMessage='Try Out'\n            />\n        </Button>\n    );\n    if (!defaultApplication\n        || subscribedApplications.length > 0\n        || api.advertiseInfo.advertised\n        || !user\n        || isAsyncAPI\n        || isPrototypedAPI) {\n        return (\n            <>{redirectButton}</>\n\n        );\n    }\n    return (\n        <>\n            <Button\n                onClick={handleTryOutClick}\n                variant='contained'\n                color='primary'\n                size='medium'\n                aria-label='Try Out the API'\n                sx={{\n                    whiteSpace: 'nowrap',\n                }}\n            >\n                <FormattedMessage\n                    id='Apis.Details.GoToTryOut.btn.tryout'\n                    defaultMessage='Try Out'\n                />\n            </Button>\n\n            <Modal\n                aria-label='Preparing to Try Out the API'\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n                role='status'\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        sx={{\n                            outline: 'none',\n                            bgcolor: 'background.paper',\n                            transform: 'translate(-50%, -50%)',\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            borderRadius: 4,\n                        }}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.subscribe.completed}\n                                errors={tasksStatus.subscribe.errors}\n                                inProgress={tasksStatus.subscribe.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.complete.success'\n                                        defaultMessage='API subscribe to DefaultApplication successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.inprogress'\n                                        defaultMessage='API subscribing to DefaultApplication ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.subscribe.complete'\n                                    defaultMessage='API subscribe to DefaultApplication'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.prepare.completed}\n                                errors={tasksStatus.prepare.errors}\n                                inProgress={tasksStatus.prepare.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                        defaultMessage='Getting ready to generate keys'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.inprogress'\n                                        defaultMessage='Gathering information to generate keys ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                    defaultMessage='Getting ready to generate keys'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.generate.completed}\n                                errors={tasksStatus.generate.errors}\n                                inProgress={tasksStatus.generate.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.complete'\n                                        defaultMessage='Consumer key and secret generated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.inprogress'\n                                        defaultMessage='Generating Consumer key and secret ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.key.secret'\n                                    defaultMessage='Consumer key and secret'\n                                />\n                            </TaskState>\n                            {anyErrors ? (\n                                <Grid item xs={12}>\n                                    <Button\n                                        onClick={() => {\n                                            setShowStatus(false);\n                                            tasksStatusDispatcher({ name: 'reset' });\n                                        }}\n                                        variant='outlined'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.GoToTryOut.continue.on.close'\n                                            defaultMessage='Close'\n                                        />\n                                    </Button>\n                                </Grid>\n                            ) : (\n                                <>\n                                    <Grid item xs={12}>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Apis.Details.GoToTryOut.popup.final.message'\n                                                defaultMessage={'All set to try out. Use the \"Generate Keys\"'\n                                                + ' button to get an access token while you are on the Try Out page.'}\n                                            />\n                                        </Typography>\n\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Box display='flex' pr={4}>\n                                            <Box flex={1} />\n                                            {redirectButton}\n                                        </Box>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Grid from '@mui/material/Grid';\nimport Chip from '@mui/material/Chip';\nimport Tooltip from '@mui/material/Tooltip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst PREFIX = 'SolaceEndpoints';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n    sectionTitle: `${PREFIX}-sectionTitle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    [`& .${classes.sectionTitle}`]: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\nfunction SolaceEndpoints() {\n    const { api } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [protocols, setProtocols] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    useEffect(() => {\n        const protocolsList = [];\n        if (api.asyncTransportProtocols) {\n            api.asyncTransportProtocols.map((e) => {\n                protocolsList.push(JSON.parse(e));\n                return null;\n            });\n            setProtocols(protocolsList);\n        }\n    }, [api]);\n\n    return (\n        <Root>\n            {(api.gatewayVendor === 'solace') && (\n                <Grid container spacing={2} xs={12}>\n                    <Grid item spacing={2} xs={2}>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.protocols.and.endpoints'\n                                defaultMessage='Protocols & Endpoints'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item spacing={2} xs={10}>\n                        <GoToTryOut />\n                    </Grid>\n                    <Grid item spacing={2} xs={12}>\n                        <Grid container spacing={2} xs={12}>\n\n                            <Grid item spacing={2} xs={12}>\n                                {api.endpointURLs.map((e) => (\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                    >\n                                        {e.environmentDisplayName}\n                                    </Typography>\n                                ))}\n                            </Grid>\n                            <Grid item spacing={2} xs={12}>\n                                {protocols && protocols.map((p) => (\n                                    <Grid container spacing={2} xs={12}>\n                                        <Grid item>\n                                            <Typography component='p' variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.blank'\n                                                    defaultMessage='-'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Chip\n                                                label={upperCaseString(p.protocol)}\n                                                data-testid={upperCaseString(p.protocol) + '-label'}\n                                                color='primary'\n                                                style={{\n                                                    width: '70px',\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid\n                                            xs={10}\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Paper\n                                                id='gateway-envirounment'\n                                                component='form'\n                                                className={classes.root}\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={p.endPointUrl}\n                                                />\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <IconButton\n                                                            aria-label='Copy the API URL to clipboard'\n                                                            size='large'\n                                                            onClick={() => {\n                                                                navigator.clipboard\n                                                                    .writeText(p.endPointUrl).then(() => onCopy('urlCopied'));\n                                                            }}\n                                                        >\n                                                            <Icon color='secondary'>file_copy</Icon>\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </Root>\n    );\n}\n\nSolaceEndpoints.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceEndpoints;\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Avatar from '@mui/material/Avatar';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Box from '@mui/material/Box';\nimport Icon from '@mui/material/Icon';\nimport Divider from '@mui/material/Divider';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst PREFIX = 'Environments';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n    sectionTitle: `${PREFIX}-sectionTitle`,\n};\n\nconst StyledBox = styled(Box)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    [`& .${classes.sectionTitle}`]: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\n/**\n *  @inheritdoc\n */\nfunction Environments(props) {\n    const { selectedEndpoint, updateSelectedEndpoint } = props;\n    const {\n        api,\n        api: { advertiseInfo },\n    } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const getDefaultVersionUrl = () => {\n        const { defaultVersionURLs } = selectedEndpoint;\n        if (defaultVersionURLs\n            && (defaultVersionURLs.https\n                || defaultVersionURLs.http\n                || defaultVersionURLs.ws\n                || defaultVersionURLs.wss)) {\n            return (\n                <>\n                    {`\n            ${intl.formatMessage({\n                    id: 'Apis.Details.Environments.default.url',\n                    defaultMessage: '( Default Version ) ',\n                })}\n            ${(defaultVersionURLs.https || defaultVersionURLs.http || defaultVersionURLs.ws || defaultVersionURLs.wss)}`}\n                    <Tooltip\n                        title={\n                            urlCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        interactive\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <IconButton\n                            aria-label='Copy the Default Version URL to clipboard'\n                            size='large'\n                            onClick={() => {\n                                navigator.clipboard.writeText(defaultVersionURLs.https\n                                || defaultVersionURLs.http\n                                || defaultVersionURLs.ws\n                                || defaultVersionURLs.wss).then(onCopy('urlCopied'));\n                            }}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     *  @inheritdoc\n     */\n    // if (!selectedEndpoint) {\n    //     return <Progress />;\n    // }\n    return (\n        <StyledBox display='flex' flexDirection='column' width='100%'>\n            <Box mr={5} display='flex' area-label='API URL details' alignItems='center' width='100%' flexDirection='row'>\n                {selectedEndpoint && (!advertiseInfo || !advertiseInfo.advertised) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='gateway-envirounment'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='gateway-envirounment' component='form' className={classes.root}>\n                            {api.endpointURLs.length > 1 && (\n                                <>\n                                    <Select\n                                        variant='standard'\n                                        value={selectedEndpoint.environmentName}\n                                        onChange={updateSelectedEndpoint}\n                                        aria-label='Select the Gateway Environment'\n                                    >\n                                        {api.endpointURLs.map((endpoint) => (\n                                            <MenuItem value={endpoint.environmentName}>\n                                                {endpoint.environmentDisplayName || endpoint.environmentName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <VerticalDivider height={api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws\n                                        || selectedEndpoint.URLs.wss) ? 80 : 30}\n                                    />\n                                </>\n                            )}\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {(api.type === 'GRAPHQL')\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Gateway HTTP URL for GraphQL Queries and Mutations',\n                                                        id: 'Apis.Details.Environments.GraphQL.HTTP.Gateway.URL',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Gateway URL',\n                                                        id: 'Apis.Details.Environments.Gateway.URL',\n                                                    })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.wss\n                                            || selectedEndpoint.URLs.ws}\n                                            data-testid='http-url'\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard.writeText(selectedEndpoint.URLs.https\n                                                    || selectedEndpoint.URLs.http\n                                                    || selectedEndpoint.URLs.wss\n                                                    || selectedEndpoint.URLs.ws).then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws || selectedEndpoint.URLs.wss)\n                            && (\n                                <>\n                                    <Divider sx={{ opacity: 0.2 }} />\n                                    <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                        <>\n                                            <Tooltip\n                                                title={(\n                                                    <Typography color='inherit'>\n                                                        {intl.formatMessage({\n                                                            defaultMessage: 'Gateway Websocket URL for GraphQL Subscriptions',\n                                                            id: 'Apis.Details.Environments.GraphQL.WS.Gateway.URL',\n                                                        })}\n                                                    </Typography>\n                                                )}\n                                                placement='left-start'\n                                                arrow\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={selectedEndpoint.URLs.wss\n                                                    || selectedEndpoint.URLs.ws}\n                                                    data-testid='websocket-url'\n                                                />\n                                            </Tooltip>\n                                            <Avatar className={classes.avatar} sizes={30}>\n                                                <Tooltip\n                                                    title={urlCopied\n                                                        ? intl.formatMessage({\n                                                            defaultMessage: 'Copied',\n                                                            id: 'Apis.Details.Environments.copied',\n                                                        })\n                                                        : intl.formatMessage({\n                                                            defaultMessage: 'Copy to clipboard',\n                                                            id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                        })}\n                                                    interactive\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <IconButton\n                                                        aria-label='Copy the API URL to clipboard'\n                                                        size='large'\n                                                        onClick={() => {\n                                                            navigator.clipboard.writeText(selectedEndpoint.URLs.wss\n                                                            || selectedEndpoint.URLs.ws).then(onCopy('urlCopied'));\n                                                        }}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Avatar>\n                                        </>\n                                    </Box>\n\n                                </>\n                            )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {advertiseInfo && advertiseInfo.advertised && (advertiseInfo.apiExternalProductionEndpoint\n                    || advertiseInfo.apiExternalSandboxEndpoint) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='external-endpoint-url'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.externalEndpoint.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='external-endpoint-url' component='form' className={classes.root}>\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {intl.formatMessage({\n                                                    defaultMessage: 'External Production Endpoint',\n                                                    id: 'Apis.Details.Environments.apiExternalProductionEndpoint',\n                                                })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={advertiseInfo.apiExternalProductionEndpoint}\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard.writeText(\n                                                        advertiseInfo.apiExternalProductionEndpoint,\n                                                    )\n                                                        .then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {advertiseInfo.apiExternalSandboxEndpoint && (\n                                    <>\n                                        <Divider sx={{ opacity: 0.2 }} />\n                                        <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                            <>\n                                                <Tooltip\n                                                    title={(\n                                                        <Typography color='inherit'>\n                                                            {intl.formatMessage({\n                                                                defaultMessage: 'External Sandbox Endpoint',\n                                                                id: 'Apis.Details.Environments.apiExternalSandboxEndpoint',\n                                                            })}\n                                                        </Typography>\n                                                    )}\n                                                    placement='left-start'\n                                                    arrow\n                                                >\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={advertiseInfo.apiExternalSandboxEndpoint}\n                                                    />\n                                                </Tooltip>\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })}\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <IconButton\n                                                            aria-label='Copy the API URL to clipboard'\n                                                            size='large'\n                                                            onClick={() => {\n                                                                navigator.clipboard.writeText(\n                                                                    advertiseInfo.apiExternalSandboxEndpoint,\n                                                                )\n                                                                    .then(onCopy('urlCopied'));\n                                                            }}\n                                                        >\n                                                            <Icon color='secondary'>file_copy</Icon>\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </>\n                                        </Box>\n\n                                    </>\n                                )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {!selectedEndpoint && (advertiseInfo && advertiseInfo.advertised\n                    && !(advertiseInfo.apiExternalProductionEndpoint || advertiseInfo.apiExternalSandboxEndpoint)) && (\n                    <Typography variant='subtitle2' component='p' gutterBottom align='left' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.label.noendpoint'\n                            defaultMessage='No endpoints yet.'\n                        />\n                    </Typography>\n                )}\n                <GoToTryOut />\n            </Box>\n            {(!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                <Box ml={8} alignItems='center' mt={1}>\n                    {selectedEndpoint && (\n                        <Typography variant='caption'>\n                            {getDefaultVersionUrl()}\n                        </Typography>\n                    )}\n                </Box>\n            )}\n        </StyledBox>\n    );\n}\nEnvironments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default Environments;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst PREFIX = 'OverviewDocuments';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    iconClass: `${PREFIX}-iconClass`,\n    boxBadge: `${PREFIX}-boxBadge`,\n    subscriptionBox: `${PREFIX}-subscriptionBox`,\n    linkStyle: `${PREFIX}-linkStyle`,\n    subscriptionTop: `${PREFIX}-subscriptionTop`,\n    resourceWrapper: `${PREFIX}-resourceWrapper`,\n    actionPanel: `${PREFIX}-actionPanel`,\n    linkToTest: `${PREFIX}-linkToTest`,\n    emptyBox: `${PREFIX}-emptyBox`,\n    listWrapper: `${PREFIX}-listWrapper`,\n    listItemStyle: `${PREFIX}-listItemStyle`,\n    listItemIcon: `${PREFIX}-listItemIcon`,\n    listItemPrimary: `${PREFIX}-listItemPrimary`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(3),\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n\n    [`& .${classes.iconClass}`]: {\n        marginRight: 10,\n        color: theme.palette.secondary.main,\n    },\n\n    [`& .${classes.boxBadge}`]: {\n        background: theme.palette.grey.A400,\n        color: theme.palette.getContrastText(theme.palette.grey.A400),\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n\n    [`& .${classes.subscriptionBox}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.linkStyle}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n\n    [`& .${classes.subscriptionTop}`]: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.resourceWrapper}`]: {\n        height: 192,\n        overflow: 'auto',\n    },\n\n    [`& .${classes.actionPanel}`]: {\n        justifyContent: 'flex-start',\n    },\n\n    [`& .${classes.linkToTest}`]: {\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.emptyBox}`]: {\n        background: '#ffffff55',\n        color: '#444',\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        marginTop: 50,\n    },\n\n    [`& .${classes.listWrapper}`]: {\n        padding: 0,\n        margin: 0,\n        width: '100%',\n    },\n\n    [`& .${classes.listItemStyle}`]: {\n        padding: 0,\n        margin: 0,\n    },\n\n    [`& .${classes.listItemIcon}`]: {\n        minWidth: 30,\n        color: '#BBBEBC66',\n    },\n\n    [`& .${classes.listItemPrimary}`]: {\n        fontSize: '14px',\n    },\n}));\n\n/**\n * Add two numbers.\n * @param {number} props The second number.\n * @returns {JSX} jsx.\n */\nfunction OverviewDocuments(props) {\n    const [docs, setDocs] = useState([]);\n    const intl = useIntl();\n    const { apiId } = props;\n    const history = useHistory();\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(apiId);\n        promisedApi\n            .then((response) => {\n                if (response.obj.list.length > 0) {\n                    // Rearanging the response to group them by the sourceType property.\n                    setDocs(response.obj.list);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.documents.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            });\n    }, []);\n\n    const gotoDoc = (documentId) => {\n        history.push('/apis/' + apiId + '/documents/' + documentId);\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Overview\n     */\n\n    if (docs.length === 0) {\n        return (\n            <Root>\n                <Grid container className={classes.root} spacing={2}>\n                    <Grid item xs={12}>\n                        <div className={classes.emptyBox}>\n                            <Typography variant='body2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.documents.no.content'\n                                    defaultMessage='No Documents Available'\n                                />\n                            </Typography>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Root>\n        );\n    }\n\n    return (\n        docs.length > 0 && (\n            <Root>\n                <List\n                    component='nav'\n                    aria-label='Available document list'\n                    className={classes.listWrapper}\n                >\n                    {docs.map((doc, index) => (\n                        index <= 1\n                        && (\n                            <ListItem button onClick={() => gotoDoc(doc.documentId)} className={classes.listItemStyle} key={doc.name}>\n                                <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                                    <Icon>insert_drive_file</Icon>\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={doc.name}\n                                    // secondary={truncateString(100, doc.summary)}\n                                    classes={{ primary: classes.listItemPrimary }}\n                                />\n                            </ListItem>\n                        )\n                    ))}\n                </List>\n            </Root>\n        )\n    );\n}\n\nOverviewDocuments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default (OverviewDocuments);\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { Link } from '@mui/material';\nimport CloudDownloadRounded from '@mui/icons-material/CloudDownloadRounded';\nimport Tooltip from '@mui/material/Tooltip';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Settings from 'Settings';\nimport queryString from 'query-string';\nimport { ApiContext } from './ApiContext';\n\n/**\n * Renders the download links.\n * @returns {JSX} rendered output\n */\nfunction SourceDownload(props) {\n    const { selectedEndpoint } = props;\n    const { api } = useContext(ApiContext);\n    const apiClient = new API();\n    const intl = useIntl();\n    const accessTokenPart = Utils.getCookieWithoutEnvironment('WSO2_AM_TOKEN_1_Default');\n    const [isTokenCopied, setIsTokenCopied] = useState(false);\n\n    const { location } = window;\n\n    const { app: { customUrl: { tenantDomain: customUrlEnabledDomain } } } = Settings;\n    let tenantDomain = '';\n    if (customUrlEnabledDomain !== 'null') {\n        tenantDomain = customUrlEnabledDomain;\n    } else if (location) {\n        const { tenant } = queryString.parse(location.search);\n        if (tenant) {\n            tenantDomain = tenant;\n        }\n    }\n    const tenant = tenantDomain;\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {EventListener} e element click event\n     */\n    const downloadWSDL = (e) => {\n        e.preventDefault();\n        const wsdlClient = apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(api.id, selectedEndpoint.environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    };\n\n    const downloadGraphQLSchema = (e) => {\n        e.preventDefault();\n        const promisedGraphQL = apiClient.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            Utils.downloadFile(response, fileName);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.graphql.error',\n                        defaultMessage: 'Error downloading the GraphQL Schema',\n                    }));\n                }\n            });\n    };\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadSwagger = (e) => {\n        e.preventDefault();\n        let promiseSwagger;\n\n        if (selectedEndpoint.environmentName) {\n            promiseSwagger = apiClient.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName);\n        } else {\n            promiseSwagger = apiClient.getSwaggerByAPIId(api.id);\n        }\n        promiseSwagger.then((done) => {\n            Utils.downloadFile(done);\n        }).catch((error) => {\n            console.log(error);\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Environments.download.swagger.error',\n                defaultMessage: 'Error downloading the Swagger',\n            }));\n        });\n    };\n\n    /**\n     * Downloads the asyncapi specification of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadAsync = (e) => {\n        e.preventDefault();\n        const promiseAsync = apiClient.getAsyncApiSpecificationByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName);\n        promiseAsync\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.asyncapi.error',\n                    defaultMessage: 'Error downloading the AsyncAPI Specification',\n                }));\n            });\n    };\n\n    if (\n        api.type === 'SOAP') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl'\n                        defaultMessage='WSDL'\n                    />\n                )}\n                placement='right'\n                sx={{\n                    cursor: 'pointer',\n                    margin: '-10px 0',\n                    padding: '0 0 0 5px',\n                    '& .material-icons': (theme) => ({\n                        fontSize: 18,\n                        color: theme.palette.secondary.main,\n                    }),\n                }}\n            >\n                <a\n                    onKeyDown={downloadWSDL}\n                    onClick={downloadWSDL}\n                    className={(theme) => ({\n                        fontSize: 14,\n                        color: theme.palette.primary.main,\n                        display: 'flex',\n                    })}\n                >\n                    <CloudDownloadRounded sx={{\n                        marginRight: 1,\n                    }}\n                    />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl.text'\n                        defaultMessage='Download WSDL'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'HTTP' || api.type === 'SOAPTOREST') {\n        return (\n            <Box display='flex' alignItems='center'>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Environments.download.swagger'\n                            defaultMessage='Swagger'\n                        />\n                    )}\n                    placement='right'\n                    sx={(theme) => ({\n                        cursor: 'pointer',\n                        '& .material-icons': {\n                            fontSize: 18,\n                            color: theme.palette.secondary.main,\n                        },\n                    })}\n                >\n                    <Link\n                        onClick={downloadSwagger}\n                        onKeyDown={downloadSwagger}\n                        sx={(theme) => ({\n                            fontSize: 14,\n                            color: theme.palette.primary.main,\n                            display: 'flex',\n                            textDecoration: 'none',\n                        })}\n                        id='swagger-download-btn'\n                        variant='body2'\n                    >\n                        <CloudDownloadRounded sx={{ mt: 0.5, mr: 1 }} />\n                        <FormattedMessage\n                            id='Apis.Details.Environments.download.swagger.text'\n                            defaultMessage='Download Swagger'\n                        />\n                    </Link>\n                </Tooltip>\n                <Tooltip\n                    title={isTokenCopied\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Swagger.URL.copied'\n                                defaultMessage='Copied'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Swagger.URL.copy.to.clipboard'\n                                defaultMessage='Copy to clipboard'\n                            />\n                        )}\n                    placement='top'\n                >\n                    <Button\n                        aria-label='Copy to clipboard'\n                        size='small'\n                        color='grey'\n                        onClick={() => {\n                            navigator.clipboard.writeText(location.origin + '/api/am/devportal/v3/apis/' + api.id\n                            + '/swagger?accessToken=' + accessTokenPart + '&X-WSO2-Tenant-Q='\n                            + tenant + '&environmentName='\n                            + selectedEndpoint.environmentName).then(() => setIsTokenCopied('urlCopied'));\n                        }}\n                        sx={{ minWidth: 'auto', ml: 1 }}\n                    >\n                        <FileCopyIcon />\n                    </Button>\n                </Tooltip>\n            </Box>\n        );\n    }\n    if (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.asyncapi'\n                        defaultMessage='AsyncAPI Specification'\n                    />\n                )}\n                placement='right'\n                sx={(theme) => ({\n                    cursor: 'pointer',\n                    margin: '-10px 0',\n                    padding: '0 0 0 5px',\n                    '& .material-icons': {\n                        fontSize: 18,\n                        color: theme.palette.secondary.main,\n                    },\n                })}\n            >\n                <a\n                    onKeyDown={downloadAsync}\n                    onClick={downloadAsync}\n                    className={(theme) => ({\n                        fontSize: 14,\n                        color: theme.palette.primary.main,\n                        display: 'flex',\n                    })}\n                    id='swagger-download-btn'\n                >\n                    <CloudDownloadRounded sx={{\n                        marginRight: 1,\n                    }}\n                    />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.asyncapi.text'\n                        defaultMessage='Download AsyncAPI Specification'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'GRAPHQL') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphQL'\n                        defaultMessage='GraphQL'\n                    />\n                )}\n                placement='right'\n                sx={(theme) => ({\n                    cursor: 'pointer',\n                    margin: '-10px 0',\n                    padding: '0 0 0 5px',\n                    '& .material-icons': {\n                        fontSize: 18,\n                        color: theme.palette.secondary.main,\n                    },\n                })}\n            >\n                <a\n                    onKeyDown={downloadGraphQLSchema}\n                    onClick={downloadGraphQLSchema}\n                    className={(theme) => ({\n                        fontSize: 14,\n                        color: theme.palette.primary.main,\n                        display: 'flex',\n                    })}\n                >\n                    <CloudDownloadRounded sx={{\n                        marginRight: 1,\n                    }}\n                    />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphql.text'\n                        defaultMessage='Download GraphQL'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SourceDownload;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Link as MUILink } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport CardContent from '@mui/material/CardContent';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ApiThumb from 'AppComponents/Apis/Listing/ApiThumb';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport API from 'AppData/api';\nimport View from 'AppComponents/Apis/Details/Documents/View';\nimport SolaceEndpoints from './SolaceEndpoints';\nimport Environments from './Environments';\nimport Comments from './Comments/Comments';\nimport OverviewDocuments from './OverviewDocuments';\nimport SourceDownload from './SourceDownload';\n\nconst PREFIX = 'Overview';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    linkTitle: `${PREFIX}-linkTitle`,\n    description: `${PREFIX}-description`,\n    textLabel: `${PREFIX}-textLabel`,\n    textValue: `${PREFIX}-textValue`,\n    apiThumb: `${PREFIX}-apiThumb`,\n    chipRoot: `${PREFIX}-chipRoot`,\n    subtitle: `${PREFIX}-subtitle`,\n    cardRoot: `${PREFIX}-cardRoot`,\n    sectionTitle: `${PREFIX}-sectionTitle`,\n    moreLink: `${PREFIX}-moreLink`,\n    table: `${PREFIX}-table`,\n    requestCount: `${PREFIX}-requestCount`,\n    requestUnit: `${PREFIX}-requestUnit`,\n    launchIcon: `${PREFIX}-launchIcon`,\n    originalDevportalUrl: `${PREFIX}-originalDevportalUrl`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        width: '100%',\n        height: '100vh',\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n\n    [`& .${classes.linkTitle}`]: {\n        color: theme.palette.grey[800],\n    },\n\n    [`& .${classes.description}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.textLabel}`]: {\n        fontWeight: 400,\n        color: theme.palette.grey[800],\n    },\n\n    [`& .${classes.textValue}`]: {\n        textIndent: theme.spacing(1),\n    },\n\n    [`& .${classes.apiThumb}`]: {\n        padding: theme.spacing(),\n        border: 'solid 1px',\n        borderColor: theme.palette.grey[800],\n    },\n\n    [`& .${classes.chipRoot}`]: {\n        cursor: 'pointer',\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.subtitle}`]: {\n        color: theme.palette.grey[800],\n    },\n\n    [`& .${classes.cardRoot}`]: {\n        width: 150,\n        height: 150,\n        marginRight: theme.spacing(),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.sectionTitle}`]: {\n        color: theme.palette.grey[800],\n        fontSize: '0.95rem',\n        fontWeight: 400,\n    },\n\n    [`& .${classes.moreLink}`]: {\n        fontSize: '14px',\n    },\n\n    [`& .${classes.table}`]: {\n        '& th': {\n            fontWeight: 400,\n        },\n    },\n\n    [`& .${classes.requestCount}`]: {\n        fontSize: 22,\n    },\n\n    [`& .${classes.requestUnit}`]: {\n        fontSize: 13,\n    },\n\n    [`& .${classes.launchIcon}`]: {\n        paddingLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.originalDevportalUrl}`]: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\n/**\n * @returns {JSX} overview section\n */\nfunction Overview() {\n    const theme = useTheme();\n\n    const {\n        custom: {\n            apiDetailPages: {\n                showCredentials,\n                showComments,\n                showDocuments,\n            },\n            infoBar: { showThumbnail },\n            social: { showRating },\n            showSwaggerDescriptionOnOverview,\n        },\n    } = theme;\n    const intl = useIntl();\n    const {\n        api,\n        api: { advertiseInfo },\n        subscribedApplications,\n    } = useContext(ApiContext);\n    const [descriptionHidden, setDescriptionHidden] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [allDocuments, setAllDocuments] = useState(null);\n    const [overviewDocOverride, setOverviewDocOverride] = useState(null);\n    const [swaggerDescription, setSwaggerDescription] = useState(null);\n    const [allPolicies, setAllPolicies] = useState(null);\n    const [rating, setRating] = useState({\n        avgRating: 0,\n        total: 0,\n        count: 0,\n    });\n    const [selectedEndpoint, setSelectedEndpoint] = useState((api.endpointURLs && api.endpointURLs.length > 0)\n        ? api.endpointURLs[0]\n        : null);\n\n    // Truncating the description\n    let descriptionIsBig = false;\n    let smallDescription = '';\n    if (api.description) {\n        const limit = 40;\n        if (api.description.split(' ').length > limit) {\n            const newContent = api.description.split(' ').slice(0, limit);\n            smallDescription = newContent.join(' ') + '...';\n            descriptionIsBig = true;\n        }\n    }\n\n    const isApiPolicy = (policyName) => {\n        const filteredApiPolicies = api.tiers.filter((t) => t.tierName === policyName);\n        return filteredApiPolicies && filteredApiPolicies.length > 0;\n    };\n\n    const updateSelectedEndpoint = (e) => {\n        const selectedEnvName = e.target.value;\n        const filteredEndpoints = api.endpointURLs.filter((ep) => ep.environmentName === selectedEnvName);\n        if (filteredEndpoints && filteredEndpoints.length > 0) {\n            setSelectedEndpoint(filteredEndpoints[0]);\n        } else {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Overview.select.env.error',\n                defaultMessage: 'Error Selecting Environment',\n            }));\n        }\n    };\n\n    const getSubscriptionPolicies = () => {\n        const restApi = new API();\n        return restApi.getAllTiers('subscription')\n            .then((response) => {\n                try {\n                    // Filter policies base on async or not.\n                    const filteredList = response.body.list.filter((str) => isApiPolicy(str.name));\n                    setAllPolicies(filteredList);\n                } catch (e) {\n                    console.log(e);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.subs',\n                    defaultMessage: 'Error occurred when fetching subscription policies',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n\n    const getDocuments = () => {\n        const restApi = new API();\n        return restApi.getDocumentsByAPIId(api.id)\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    // We can override the UI with this content\n                    setOverviewDocOverride(overviewDoc[0]); // Only one doc we can render\n                }\n                setAllDocuments(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.docs',\n                    defaultMessage: 'Error occurred when fetching documents',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        const { endpointURLs } = api;\n        if (endpointURLs && endpointURLs.length > 0) {\n            setSelectedEndpoint(endpointURLs[0]);\n        }\n        Promise.all([getDocuments(), getSubscriptionPolicies()])\n            .then(() => {\n                setIsLoading(false);\n            });\n    }, [api]);\n    useEffect(() => {\n        const restApi = new API();\n        if (showSwaggerDescriptionOnOverview) {\n            restApi.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName)\n                .then((swaggerResponse) => {\n                    const swagger = swaggerResponse.obj;\n                    if (swagger && swagger.info) {\n                        setSwaggerDescription(swagger.info.description);\n                    } else {\n                        setSwaggerDescription('');\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSwaggerDescription('');\n                });\n        } else {\n            setIsLoading(true);\n            Promise.all([getDocuments(), getSubscriptionPolicies()])\n                .then(() => {\n                    setIsLoading(false);\n                });\n        }\n    }, []);\n\n    /**\n     * @param {event} e click event\n     */\n    const collapseAllDescription = (e) => {\n        e.preventDefault();\n        setDescriptionHidden(!descriptionHidden);\n    };\n\n    /**\n     * @returns {string} provider\n     */\n    const getProvider = () => {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    };\n\n    /**\n     * @param {number} ratings rating value\n     */\n    const setRatingUpdate = (ratingLocal) => {\n        if (ratingLocal) {\n            const { avgRating, total, count } = ratingLocal;\n            setRating({ avgRating, total, count });\n        }\n    };\n\n    /**\n     * @param {JSON} api api object\n     * @returns {JSON} key managers\n     */\n    const getKeyManagers = () => {\n        if (api.keyManagers) {\n            if (api.keyManagers[0] === 'all') {\n                return null;\n            } else {\n                return (\n                    api.keyManagers.map((km) => (<Typography variant='body2'>{km}</Typography>))\n                );\n            }\n        } else {\n            return null;\n        }\n    };\n\n    const user = AuthManager.getUser();\n    if (isLoading) {\n        return (<Progress />);\n    }\n    if (showSwaggerDescriptionOnOverview) {\n        if (!swaggerDescription) {\n            return (<Progress />);\n        } else {\n            return (\n                <Box p={3}>\n                    <ReactMarkdown plugins={[gfm]} escapeHtml>\n                        {swaggerDescription}\n                    </ReactMarkdown>\n                </Box>\n            );\n        }\n    }\n    if (!allDocuments) {\n        return (<Progress />);\n    }\n    if (notFound) {\n        return (\n            <ResourceNotFound message={intl.formattedMessage({\n                id: 'Apis.Details.Overview.not.found.message',\n                defaultMessage: 'Resource Not Found',\n            })}\n            />\n        );\n    }\n    if (overviewDocOverride) {\n        return (\n            <Root>\n                <Paper className={classes.paperWithDoc} elevation={0}>\n                    <View doc={overviewDocOverride} apiId={api.id} fullScreen dontShowName />\n                </Paper>\n            </Root>\n        );\n    }\n    return (\n        <Root>\n            <Paper className={classes.root} elevation={0}>\n                <Grid container>\n                    <Grid item sm={8} xl={9}>\n                        <Box display='flex' flexDirection='column'>\n                            <Box display='flex' flexDirection='row'>\n                                {showThumbnail && (\n                                    <Box id='overview-thumbnail' width={86} display='flex' alignItems='center'>\n                                        <Box className={classes.apiThumb}>\n                                            <ApiThumb\n                                                api={api}\n                                                customWidth={70}\n                                                customHeight={50}\n                                                showInfo={false}\n                                            />\n                                        </Box>\n                                    </Box>\n                                )}\n                                <Box ml={3} mr={2}>\n                                    <Typography variant='h4' component='h2'>{api.name}</Typography>\n                                    {api.description && (\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.description}>\n                                            {(descriptionIsBig && descriptionHidden) ? smallDescription : api.description}\n                                            {descriptionIsBig && (\n                                                <a aria-label='Show more/less description' onClick={collapseAllDescription} href='#'>\n                                                    {descriptionHidden\n                                                        ? intl.formatMessage({\n                                                            defaultMessage: ' more',\n                                                            id: 'Apis.Details.Overview.description.more',\n                                                        })\n                                                        : intl.formatMessage({\n                                                            defaultMessage: ' less',\n                                                            id: 'Apis.Details.Overview.description.less',\n                                                        })}\n                                                </a>\n                                            )}\n                                        </Typography>\n                                    )}\n                                    <Box display='flex' area-lable='API version and owner details' flexDirection='row'>\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.list.version'\n                                                defaultMessage='Version '\n                                            />\n                                        </Typography>\n                                        {' '}\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                            {api.version}\n                                        </Typography>\n                                        <VerticalDivider height={20} />\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.list.provider'\n                                                defaultMessage='By '\n                                            />\n                                        </Typography>\n                                        {' '}\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                            {getProvider()}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                            </Box>\n                            <Box display='flex' flexDirection='row' alignItems='center' mt={2} pr={6}>\n                                {\n                                    (api.gatewayVendor === 'solace') ? (\n                                        <SolaceEndpoints />\n                                    ) : (\n                                        <Environments updateSelectedEndpoint={updateSelectedEndpoint} selectedEndpoint={selectedEndpoint} />\n                                    )\n                                }\n                            </Box>\n                            <Box\n                                display='flex'\n                                flexDirection='row'\n                                alignItems='center'\n                                className={classes.originalDevportalUrl}\n                                mt={2}\n                                pr={6}\n                            >\n                                {advertiseInfo && advertiseInfo.advertised && advertiseInfo.originalDevPortalUrl && (\n                                    <MUILink\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href={advertiseInfo.originalDevPortalUrl}\n                                        variant='body3'\n                                        underline='hover'\n                                    >\n                                        <FormattedMessage\n                                            id={'Apis.Details.Credentials.Credentials.visit.original.'\n                                                + 'developer.portal'}\n                                            defaultMessage='Visit Original Developer Portal'\n                                        />\n                                        <LaunchIcon className={classes.launchIcon} />\n                                    </MUILink>\n                                )}\n                            </Box>\n                            {api.gatewayVendor === 'wso2' && allPolicies && allPolicies.length > 0 && (\n                                <>\n                                    <Box mt={6}>\n                                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.business.plans.title'\n                                                defaultMessage='Business Plans'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Box\n                                        flexWrap='wrap'\n                                        display='flex'\n                                        flexDirection='row'\n                                        alignItems='center'\n                                        mt={2}\n                                        ml={1}\n                                        textAlign='center'\n                                    >\n                                        {allPolicies && allPolicies.map((tier) => (\n                                            <Card className={classes.cardRoot} key={tier.name}>\n                                                <CardContent>\n                                                    <Typography className={classes.cardMainTitle} color='textSecondary' gutterBottom>\n                                                        {tier.name}\n                                                    </Typography>\n                                                    <Box mt={2}>\n                                                        <Typography className={classes.requestCount} color='textSecondary'>\n                                                            {tier.requestCount === 2147483647 ? 'Unlimited' : tier.requestCount}\n                                                        </Typography>\n                                                    </Box>\n                                                    <Box>\n                                                        <Typography className={classes.requestUnit} color='textSecondary'>\n                                                            Requests/\n                                                            {tier.timeUnit}\n                                                        </Typography>\n                                                    </Box>\n                                                </CardContent>\n                                            </Card>\n                                        ))}\n                                    </Box>\n                                </>\n                            )}\n                            {(showCredentials && subscribedApplications.length > 0) && (\n                                <>\n                                    <Box mt={6}>\n                                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.subscriptions.title'\n                                                defaultMessage='Subscriptions'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Box mt={2} ml={1} pr={6}>\n                                        <TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label='simple table'>\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.Overview.'\n                                                                    + 'api.credentials.subscribed.apps.name'}\n                                                                defaultMessage='Application Name'\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.Overview.api.'\n                                                                    + 'credentials.subscribed.apps.tier'}\n                                                                defaultMessage='Throttling Tier'\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.Overview.'\n                                                                    + 'api.credentials.subscribed.apps.status'}\n                                                                defaultMessage='Application Status'\n                                                            />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {subscribedApplications.map((app) => (\n                                                        <TableRow key={app.label}>\n                                                            <TableCell component='th' scope='row'>\n                                                                <MUILink\n                                                                    component={Link}\n                                                                    to={`/applications/${app.value}/overview`}\n                                                                    underline='hover'\n                                                                >\n                                                                    {app.label}\n                                                                </MUILink>\n                                                            </TableCell>\n                                                            <TableCell>{app.policy}</TableCell>\n                                                            <TableCell>{app.status}</TableCell>\n                                                        </TableRow>\n                                                    ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Box>\n                                </>\n                            )}\n                            <Box mt={6}>\n                                {showComments && (\n                                    <>\n                                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.comments.title'\n                                                defaultMessage='Comments'\n                                            />\n                                        </Typography>\n                                        <Box pr={6}>\n                                            {api && (\n                                                <Comments apiId={api.id} isOverview />\n                                            )}\n                                        </Box>\n                                    </>\n                                )}\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={4} xl={3}>\n                        {user && showRating && (\n                            <Box display='flex' flexDirection='row' alignItems='center'>\n                                <StarRatingSummary avgRating={rating.avgRating} reviewCount={rating.total} returnCount={rating.count} />\n                                <VerticalDivider height={30} />\n                                <StarRatingBar\n                                    apiId={api.id}\n                                    isEditable\n                                    showSummary={false}\n                                    setRatingUpdate={setRatingUpdate}\n                                />\n                            </Box>\n                        )}\n                        <Box mt={6}>\n                            <Social />\n                        </Box>\n                        {/* Subscription count */}\n                        <Box mt={2} mb={1}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.subscriptions.title'\n                                    defaultMessage='Subscriptions'\n                                />\n                            </Typography>\n                            <Typography variant='body2'>\n                                {api.subscriptions || 0}\n                            </Typography>\n                        </Box>\n                        <Box mt={2} mb={1}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.tags.title'\n                                    defaultMessage='Tags'\n                                />\n                            </Typography>\n                        </Box>\n\n                        <Typography variant='body2' className={classes.endpointLabel}>\n                            {api.tags.map((tag) => (\n                                <Chip\n                                    label={tag}\n                                    key={tag}\n                                    component={Link}\n                                    clickable\n                                    to={`/apis?offset=0&query=tag:${tag}`}\n                                    classes={{ root: classes.chipRoot }}\n                                    variant='outlined'\n                                    size='small'\n                                />\n                            ))}\n                            {api.tags.length === 0 && (\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.list.tags.not'\n                                    defaultMessage='Not Tagged'\n                                />\n                            )}\n                        </Typography>\n\n                        {/* Documentation */}\n                        {(showDocuments && allDocuments && allDocuments.length > 0) && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.documents.title'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box pr={2} pl={1}>\n                                    <OverviewDocuments apiId={api.id} />\n                                    {allDocuments.length > 2 && (\n                                        <MUILink\n                                            component={Link}\n                                            to={'/apis/' + api.id + '/documents'}\n                                            className={classes.moreLink}\n                                            underline='hover'\n                                        >\n                                            {allDocuments.length - 2}\n                                            {' '}\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.comments.show.more.more'\n                                                defaultMessage='more'\n                                            />\n                                        </MUILink>\n                                    )}\n                                </Box>\n                            </>\n\n                        )}\n                        {api.businessInformation.businessOwnerEmail && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.business.info'\n                                            defaultMessage='Business Info'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={1}>\n                                    <Typography variant='body2'>\n                                        {api.businessInformation.businessOwnerEmail}\n                                    </Typography>\n                                </Box>\n                            </>\n                        )}\n                        <Box mt={6}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.source'\n                                    defaultMessage='Source'\n                                />\n                            </Typography>\n                        </Box>\n                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST'\n                            || api.type === 'SOAP' || api.type === 'GRAPHQL' || api.type === 'WS' || api.type === 'WEBSUB'\n                            || api.type === 'SSE' || api.type === 'ASYNC') && (\n                            <Box mt={2}>\n                                {selectedEndpoint && (<SourceDownload selectedEndpoint={selectedEndpoint} />)}\n                            </Box>\n                        )}\n                        {/* Key Managers */}\n                        {getKeyManagers() && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.key.manager'\n                                            defaultMessage='Key Managers'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={1}>\n                                    {getKeyManagers()}\n                                </Box>\n                            </>\n                        )}\n                        {api.additionalProperties && Object.keys(api.additionalProperties).length > 0 && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.additional.properties'\n                                            defaultMessage='Additonal properties'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={1} ml={1}>\n                                    {api.additionalProperties\n                                        .filter(({ name, display }) => display && !['slack_url', 'github_repo'].includes(name))\n                                        .map(({ name, value }) => {\n                                            return (\n                                                <Typography variant='body2'>\n                                                    {name}\n                                                    {' '}\n                                                    :\n                                                    {' '}\n                                                    {value}\n                                                </Typography>\n                                            );\n                                        })}\n                                </Box>\n                            </>\n                        )}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Root>\n    );\n}\n\nexport default Overview;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","PREFIX","classes","root","docTitle","docBadge","button","displayURL","displayURLLink","docSummary","fileAvailability","Root","styled","_ref","theme","paddingTop","spacing","paddingBottom","fontWeight","fontSize","color","palette","grey","padding","background","primary","main","position","top","marginTop","getContrastText","display","paddingLeft","text","marginLeft","ReactMarkdown","lazy","View","props","doc","apiId","intl","api","useContext","ApiContext","code","setCode","useState","isFileAvailable","setIsFileAvailable","restAPI","API","skipHtml","Settings","markdown","markdownSyntaxHighlighterProps","syntaxHighlighterProps","syntaxHighlighterDarkTheme","useEffect","sourceType","getInlineContentOfDocument","documentId","then","dataDoc","Object","keys","forEach","fieldName","regex","RegExp","replace","catch","error","getFileForDocument","React","summary","otherTypeName","Typography","variant","className","Suspense","fallback","CircularProgress","children","remarkPlugins","remarkGfm","components","_ref2","node","inline","propsInner","_objectWithoutProperties","_excluded","match","exec","SyntaxHighlighter","_extends","String","style","vscDarkPlus","vs","language","PreTag","HTMLRender","html","href","sourceUrl","target","rel","Icon","Button","disabled","onClick","handleDownload","done","response","fileName","contentDisposition","headers","indexOf","matches","contentType","blob","Blob","data","type","window","navigator","msSaveBlob","URL","webkitURL","downloadUrl","createObjectURL","aTag","document","createElement","download","location","body","appendChild","click","setTimeout","revokeObjectURL","downloadFile","FormattedMessage","id","defaultMessage","propTypes","PropTypes","isRequired","formatMessage","injectIntl","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TableContainerRoot","name","overridesResolver","styles","width","overflowX","TableContainer","inProps","ref","useThemeProps","component","other","ownerState","composeClasses","c","useUtilityClasses","as","clsx","paper","codeIcon","iconStyle","backgroundColor","border","boxShadow","shadows","cursor","custom","infoBar","right","getModalStyle","left","transform","modalStyle","open","setOpen","codeCopied","setCodeCopied","url","searchParams","set","embedCode","CodeIcon","handleOpen","Modal","onClose","handleClose","Tooltip","title","placement","IconButton","size","clipboard","writeText","FileCopy","socialLink","oneFlex","socialLinkWrapper","divider","marginRight","flex","alignItems","paddingRight","borderRight","height","apiName","apiUrl","encodeURI","useTheme","slack","github","additionalProperties","find","prop","social","showSharing","active","showFacebook","showReddit","showTwitter","showEmbed","showEmail","value","src","app","context","alt","EmbedCode","MailOutlineIcon","TaskState","completed","errors","inProgress","completedMessage","inProgressMessage","severity","message","description","Grid","item","xs","Alert","icon","thickness","keyStates","COMPLETED","APPROVED","CREATED","REJECTED","restApi","initialTaskStates","subscribe","prepare","generate","tasksReducer","state","action","status","_objectSpread","GoToTryOut","user","AuthManager","getUser","subscribedApplications","applicationsAvailable","updateSubscriptionData","defaultApplications","filter","x","label","defaultApplication","length","tasksStatus","tasksStatusDispatcher","useReducer","showStatus","setShowStatus","useIntl","history","useHistory","isXsOrBelow","useMediaQuery","breakpoints","down","isAsyncAPI","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","ASYNC","isPrototypedAPI","lifeCycleStatus","toLowerCase","taskManager","async","promisedTask","taskResult","console","pushToTryout","push","values","map","tasks","reduce","current","anyErrors","redirectButton","minWidth","whiteSpace","sx","advertiseInfo","advertised","throttlingPolicy","tiers","tierName","keyRequest","getKeyManagers","keyType","supportedGrantTypes","callbackUrl","keyManager","responseKeyManagerList","selectedKeyManager","list","responseKeyManagerListDefault","availableGrantTypes","k","includes","e","getKeyRequest","applicationId","application","Application","get","getKeys","generateKeys","keyState","log","justifyContent","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","role","Fade","in","Box","bgcolor","borderRadius","outline","p","container","direction","pr","input","avatar","sectionTitle","borderBottom","margin","SolaceEndpoints","urlCopied","setUrlCopied","protocols","setProtocols","protocolsList","asyncTransportProtocols","JSON","parse","gatewayVendor","gutterBottom","align","endpointURLs","environmentDisplayName","Chip","upperCaseString","protocol","Paper","InputBase","inputProps","endPointUrl","Avatar","sizes","interactive","StyledBox","Environments","selectedEndpoint","updateSelectedEndpoint","onCopy","flexDirection","mr","for","Select","environmentName","onChange","endpoint","MenuItem","VerticalDivider","URLs","ws","wss","py","arrow","https","http","Divider","opacity","pt","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","ml","mt","getDefaultVersionUrl","defaultVersionURLs","iconClass","boxBadge","subscriptionBox","linkStyle","subscriptionTop","resourceWrapper","actionPanel","linkToTest","emptyBox","listWrapper","listItemStyle","listItemIcon","listItemPrimary","maxWidth","contentAreaWidth","secondary","A400","typography","h5","textAlign","overflow","textDecoration","OverviewDocuments","docs","setDocs","getDocumentsByAPIId","obj","List","index","ListItem","gotoDoc","key","ListItemIcon","ListItemText","apiClient","accessTokenPart","Utils","getCookieWithoutEnvironment","isTokenCopied","setIsTokenCopied","customUrl","tenantDomain","customUrlEnabledDomain","tenant","queryString","search","downloadWSDL","preventDefault","getWsdlClient","downloadWSDLForEnvironment","downloadGraphQLSchema","getGraphQLSchemaByAPIId","provider","version","downloadSwagger","promiseSwagger","getSwaggerByAPIIdAndEnvironment","getSwaggerByAPIId","downloadAsync","getAsyncApiSpecificationByAPIIdAndEnvironment","onKeyDown","CloudDownloadRounded","Link","origin","FileCopyIcon","linkTitle","textLabel","textValue","apiThumb","chipRoot","subtitle","cardRoot","moreLink","table","requestCount","requestUnit","launchIcon","originalDevportalUrl","textIndent","borderColor","apiDetailPages","showCredentials","showComments","showDocuments","showThumbnail","showRating","showSwaggerDescriptionOnOverview","descriptionHidden","setDescriptionHidden","isLoading","setIsLoading","notFound","setNotFound","allDocuments","setAllDocuments","overviewDocOverride","setOverviewDocOverride","swaggerDescription","setSwaggerDescription","allPolicies","setAllPolicies","rating","setRating","avgRating","total","count","setSelectedEndpoint","descriptionIsBig","smallDescription","limit","split","slice","join","getSubscriptionPolicies","getAllTiers","filteredList","str","policyName","filteredApiPolicies","t","isApiPolicy","getDocuments","overviewDoc","Promise","all","swaggerResponse","swagger","info","keyManagers","km","Progress","plugins","gfm","escapeHtml","ResourceNotFound","formattedMessage","paperWithDoc","elevation","fullScreen","dontShowName","sm","xl","ApiThumb","customWidth","customHeight","showInfo","getProvider","businessInformation","businessOwner","trim","selectedEnvName","filteredEndpoints","ep","originalDevPortalUrl","MUILink","underline","LaunchIcon","flexWrap","tier","Card","CardContent","cardMainTitle","timeUnit","Table","TableHead","TableRow","TableCell","TableBody","scope","to","policy","Comments","isOverview","StarRatingSummary","reviewCount","returnCount","StarRatingBar","isEditable","showSummary","setRatingUpdate","ratingLocal","Social","mb","subscriptions","endpointLabel","tags","tag","clickable","pl","businessOwnerEmail","SourceDownload","_ref3","module","i","arguments","source","hasOwnProperty","call","prototype"],"sourceRoot":""}